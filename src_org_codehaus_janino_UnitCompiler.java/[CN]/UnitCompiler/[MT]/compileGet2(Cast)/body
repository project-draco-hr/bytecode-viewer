{
  IClass tt=this.getType(c.targetType);
  IClass vt=this.compileGetValue(c.value);
  if (this.tryIdentityConversion(vt,tt) || this.tryWideningPrimitiveConversion(c,vt,tt) || this.tryNarrowingPrimitiveConversion(c,vt,tt)|| this.tryWideningReferenceConversion(vt,tt)|| this.tryNarrowingReferenceConversion(c,vt,tt)|| this.tryBoxingConversion(c,vt,tt)|| this.tryUnboxingConversion(c,vt,tt,null))   return tt;
{
    IClass boxedType=this.isBoxingConvertible(vt);
    if (boxedType != null && this.isWideningReferenceConvertible(boxedType,tt)) {
      this.boxingConversion(c,vt,boxedType);
      return tt;
    }
    IClass unboxedType=this.isUnboxingConvertible(vt);
    if (unboxedType != null && this.isWideningPrimitiveConvertible(unboxedType,tt)) {
      this.unboxingConversion(c,vt,unboxedType);
      this.tryWideningPrimitiveConversion(c,unboxedType,tt);
      return tt;
    }
  }
  this.compileError("Cannot cast \"" + vt + "\" to \""+ tt+ "\"",c.getLocation());
  return tt;
}
