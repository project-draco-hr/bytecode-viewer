{
  IClass.IField f=iClass.getDeclaredIField(name);
  if (f != null)   return f;
{
    IClass superclass=iClass.getSuperclass();
    if (superclass != null)     f=this.findIField(superclass,name,location);
  }
  IClass[] ifs=iClass.getInterfaces();
  for (  IClass iF : ifs) {
    IClass.IField f2=this.findIField(iF,name,location);
    if (f2 != null) {
      if (f != null) {
        throw new CompileException(("Access to field \"" + name + "\" is ambiguous - both \""+ f.getDeclaringIClass()+ "\" and \""+ f2.getDeclaringIClass()+ "\" declare it"),location);
      }
      f=f2;
    }
  }
  return f;
}
