{
  List<IClass.IMethod> ms=new ArrayList();
  this.getIMethods(targetType,invocation.methodName,ms);
  if (targetType.isInterface()) {
    IClass.IMethod[] oms=this.iClassLoader.TYPE_java_lang_Object.getDeclaredIMethods(invocation.methodName);
    for (    IMethod om : oms) {
      if (!om.isStatic() && om.getAccess() == Access.PUBLIC)       ms.add(om);
    }
  }
  if (ms.size() == 0)   return null;
  return (IClass.IMethod)this.findMostSpecificIInvocable(invocation,(IClass.IMethod[])ms.toArray(new IClass.IMethod[ms.size()]),invocation.arguments,invocation.getEnclosingBlockStatement());
}
