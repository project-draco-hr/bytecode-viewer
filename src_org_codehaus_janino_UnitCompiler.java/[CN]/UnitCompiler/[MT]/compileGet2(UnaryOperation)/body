{
  if (uo.operator == "!") {
    return this.compileGet2((BooleanRvalue)uo);
  }
  if (uo.operator == "+") {
    return this.unaryNumericPromotion(uo,this.convertToPrimitiveNumericType(uo,this.compileGetValue(uo.operand)));
  }
  if (uo.operator == "-") {
{
      Object ncv=this.getNegatedConstantValue(uo.operand);
      if (ncv != UnitCompiler.NOT_CONSTANT) {
        return this.unaryNumericPromotion(uo,this.pushConstant(uo,ncv));
      }
    }
    IClass promotedType=this.unaryNumericPromotion(uo,this.convertToPrimitiveNumericType(uo,this.compileGetValue(uo.operand)));
    this.writeOpcode(uo,Opcode.INEG + UnitCompiler.ilfd(promotedType));
    return promotedType;
  }
  if (uo.operator == "~") {
    IClass operandType=this.compileGetValue(uo.operand);
    IClass promotedType=this.unaryNumericPromotion(uo,operandType);
    if (promotedType == IClass.INT) {
      this.writeOpcode(uo,Opcode.ICONST_M1);
      this.writeOpcode(uo,Opcode.IXOR);
      return IClass.INT;
    }
    if (promotedType == IClass.LONG) {
      this.writeOpcode(uo,Opcode.LDC2_W);
      this.writeConstantLongInfo(-1L);
      this.writeOpcode(uo,Opcode.LXOR);
      return IClass.LONG;
    }
    this.compileError("Operator \"~\" not applicable to type \"" + promotedType + "\"",uo.getLocation());
  }
  this.compileError("Unexpected operator \"" + uo.operator + "\"",uo.getLocation());
  return this.iClassLoader.TYPE_java_lang_Object;
}
