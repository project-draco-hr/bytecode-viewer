{
  if (bo.op == "|" || bo.op == "^" || bo.op == "&") {
    this.compileBoolean2((Rvalue)bo,dst,orientation);
    return;
  }
  if (bo.op == "||" || bo.op == "&&") {
    Object lhsCv=this.getConstantValue(bo.lhs);
    if (lhsCv instanceof Boolean) {
      if (((Boolean)lhsCv).booleanValue() ^ bo.op == "||") {
        this.compileBoolean(bo.rhs,dst,UnitCompiler.JUMP_IF_TRUE ^ orientation == UnitCompiler.JUMP_IF_FALSE);
      }
 else {
        this.compileBoolean(bo.lhs,dst,UnitCompiler.JUMP_IF_TRUE ^ orientation == UnitCompiler.JUMP_IF_FALSE);
        this.fakeCompile(bo.rhs);
      }
      return;
    }
    Object rhsCv=this.getConstantValue(bo.rhs);
    if (rhsCv instanceof Boolean) {
      if (((Boolean)rhsCv).booleanValue() ^ bo.op == "||") {
        this.compileBoolean(bo.lhs,dst,UnitCompiler.JUMP_IF_TRUE ^ orientation == UnitCompiler.JUMP_IF_FALSE);
      }
 else {
        this.pop(bo.lhs,this.compileGetValue(bo.lhs));
        this.compileBoolean(bo.rhs,dst,UnitCompiler.JUMP_IF_TRUE ^ orientation == UnitCompiler.JUMP_IF_FALSE);
      }
      return;
    }
    if (bo.op == "||" ^ orientation == UnitCompiler.JUMP_IF_FALSE) {
      this.compileBoolean(bo.lhs,dst,UnitCompiler.JUMP_IF_TRUE ^ orientation == UnitCompiler.JUMP_IF_FALSE);
      this.compileBoolean(bo.rhs,dst,UnitCompiler.JUMP_IF_TRUE ^ orientation == UnitCompiler.JUMP_IF_FALSE);
    }
 else {
      CodeContext.Offset end=this.codeContext.new Offset();
      this.compileBoolean(bo.lhs,end,UnitCompiler.JUMP_IF_FALSE ^ orientation == UnitCompiler.JUMP_IF_FALSE);
      this.compileBoolean(bo.rhs,dst,UnitCompiler.JUMP_IF_TRUE ^ orientation == UnitCompiler.JUMP_IF_FALSE);
      end.set();
    }
    return;
  }
  if (bo.op == "==" || bo.op == "!=" || bo.op == "<=" || bo.op == ">=" || bo.op == "<" || bo.op == ">") {
    int opIdx=(bo.op == "==" ? 0 : bo.op == "!=" ? 1 : bo.op == "<" ? 2 : bo.op == ">=" ? 3 : bo.op == ">" ? 4 : bo.op == "<=" ? 5 : Integer.MIN_VALUE);
    if (orientation == UnitCompiler.JUMP_IF_FALSE)     opIdx^=1;
{
      boolean lhsIsNull=this.getConstantValue(bo.lhs) == null;
      boolean rhsIsNull=this.getConstantValue(bo.rhs) == null;
      if (lhsIsNull || rhsIsNull) {
        if (bo.op != "==" && bo.op != "!=") {
          this.compileError("Operator \"" + bo.op + "\" not allowed on operand \"null\"",bo.getLocation());
        }
        if (!lhsIsNull) {
          IClass lhsType=this.compileGetValue(bo.lhs);
          if (lhsType.isPrimitive()) {
            this.compileError("Cannot compare primitive type \"" + lhsType.toString() + "\" with \"null\"",bo.getLocation());
          }
        }
 else         if (!rhsIsNull) {
          IClass rhsType=this.compileGetValue(bo.rhs);
          if (rhsType.isPrimitive()) {
            this.compileError("Cannot compare \"null\" with primitive type \"" + rhsType.toString() + "\"",bo.getLocation());
          }
        }
 else {
          this.pushConstant(bo,null);
        }
        this.writeBranch(bo,Opcode.IFNULL + opIdx,dst);
        return;
      }
    }
    IClass lhsType=this.compileGetValue(bo.lhs);
    CodeContext.Inserter convertLhsInserter=this.codeContext.newInserter();
    IClass rhsType=this.compileGetValue(bo.rhs);
    if (this.getUnboxedType(lhsType).isPrimitiveNumeric() && this.getUnboxedType(rhsType).isPrimitiveNumeric() && !((bo.op == "==" || bo.op == "!=") && !lhsType.isPrimitive() && !rhsType.isPrimitive())) {
      IClass promotedType=this.binaryNumericPromotion(bo,lhsType,convertLhsInserter,rhsType);
      if (promotedType == IClass.INT) {
        this.writeBranch(bo,Opcode.IF_ICMPEQ + opIdx,dst);
      }
 else       if (promotedType == IClass.LONG) {
        this.writeOpcode(bo,Opcode.LCMP);
        this.writeBranch(bo,Opcode.IFEQ + opIdx,dst);
      }
 else       if (promotedType == IClass.FLOAT) {
        if (bo.op == ">" || bo.op == ">=") {
          this.writeOpcode(bo,Opcode.FCMPL);
        }
 else {
          this.writeOpcode(bo,Opcode.FCMPG);
        }
        this.writeBranch(bo,Opcode.IFEQ + opIdx,dst);
      }
 else       if (promotedType == IClass.DOUBLE) {
        if (bo.op == ">" || bo.op == ">=") {
          this.writeOpcode(bo,Opcode.DCMPL);
        }
 else {
          this.writeOpcode(bo,Opcode.DCMPG);
        }
        this.writeBranch(bo,Opcode.IFEQ + opIdx,dst);
      }
 else {
        throw new JaninoRuntimeException("Unexpected promoted type \"" + promotedType + "\"");
      }
      return;
    }
    if ((lhsType == IClass.BOOLEAN && this.getUnboxedType(rhsType) == IClass.BOOLEAN) || (rhsType == IClass.BOOLEAN && this.getUnboxedType(lhsType) == IClass.BOOLEAN)) {
      if (bo.op != "==" && bo.op != "!=") {
        this.compileError("Operator \"" + bo.op + "\" not allowed on boolean operands",bo.getLocation());
      }
      IClassLoader icl=this.iClassLoader;
      if (lhsType == icl.TYPE_java_lang_Boolean) {
        this.codeContext.pushInserter(convertLhsInserter);
        try {
          this.unboxingConversion(bo,icl.TYPE_java_lang_Boolean,IClass.BOOLEAN);
        }
  finally {
          this.codeContext.popInserter();
        }
      }
      if (rhsType == icl.TYPE_java_lang_Boolean) {
        this.unboxingConversion(bo,icl.TYPE_java_lang_Boolean,IClass.BOOLEAN);
      }
      this.writeBranch(bo,Opcode.IF_ICMPEQ + opIdx,dst);
      return;
    }
    if (!lhsType.isPrimitive() && !rhsType.isPrimitive()) {
      if (bo.op != "==" && bo.op != "!=") {
        this.compileError("Operator \"" + bo.op + "\" not allowed on reference operands",bo.getLocation());
      }
      if (!this.isCastReferenceConvertible(lhsType,rhsType) || !this.isCastReferenceConvertible(rhsType,lhsType))       this.compileError("Incomparable types '" + lhsType + "' and '"+ rhsType+ "'",bo.getLocation());
      this.writeBranch(bo,Opcode.IF_ACMPEQ + opIdx,dst);
      return;
    }
    this.compileError("Cannot compare types \"" + lhsType + "\" and \""+ rhsType+ "\"",bo.getLocation());
  }
  this.compileError("Boolean expression expected",bo.getLocation());
}
