{
{
    List<TypeDeclaration> ocs=UnitCompiler.getOuterClasses(icd);
    final int nesting=ocs.size();
    if (nesting >= 2) {
      icd.defineSyntheticField(new SimpleIField(this.resolve(icd),"this$" + (nesting - 2),this.resolve((TypeDeclaration)ocs.get(1))));
    }
  }
  if (icd instanceof AnonymousClassDeclaration || icd instanceof LocalClassDeclaration) {
    ClassDeclaration cd=(ClassDeclaration)icd;
    List<BlockStatement> vdais=cd.variableDeclaratorsAndInitializers;
    for (int i=0; i < vdais.size(); i++) {
      BlockStatement vdoi=(BlockStatement)vdais.get(i);
      this.fakeCompile(vdoi);
    }
  }
  this.compile2((ClassDeclaration)icd);
}
