{
  Map<String,LocalVariable> localVars=new HashMap();
  for (int i=0; i < fd.formalParameters.parameters.length; ++i) {
    FormalParameter fp=fd.formalParameters.parameters[i];
    IClass parameterIClass=this.getType(fp.type);
    LocalVariable lv=this.getLocalVariable(fp,i == fd.formalParameters.parameters.length - 1 && fd.formalParameters.variableArity);
    lv.setSlot(this.codeContext.allocateLocalVariable(Descriptor.size(lv.type.getDescriptor()),fp.name,parameterIClass));
    if (localVars.put(fp.name,lv) != null) {
      this.compileError("Redefinition of parameter \"" + fp.name + "\"",fd.getLocation());
    }
  }
  fd.localVariables=localVars;
  if (fd instanceof ConstructorDeclarator) {
    ConstructorDeclarator cd=(ConstructorDeclarator)fd;
    if (cd.optionalConstructorInvocation != null) {
      UnitCompiler.buildLocalVariableMap(cd.optionalConstructorInvocation,localVars);
    }
  }
  if (fd.optionalStatements != null) {
    for (    BlockStatement bs : fd.optionalStatements)     localVars=this.buildLocalVariableMap(bs,localVars);
  }
}
