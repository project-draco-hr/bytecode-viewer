{
  TypeDeclarationVisitor tdv=new TypeDeclarationVisitor(){
    @Override public void visitAnonymousClassDeclaration(    AnonymousClassDeclaration acd){
      try {
        UnitCompiler.this.compile2(acd);
      }
 catch (      CompileException e) {
        throw new UncheckedCompileException(e);
      }
    }
    @Override public void visitLocalClassDeclaration(    LocalClassDeclaration lcd){
      try {
        UnitCompiler.this.compile2(lcd);
      }
 catch (      CompileException e) {
        throw new UncheckedCompileException(e);
      }
    }
    @Override public void visitPackageMemberClassDeclaration(    PackageMemberClassDeclaration pmcd){
      try {
        UnitCompiler.this.compile2((PackageMemberTypeDeclaration)pmcd);
      }
 catch (      CompileException e) {
        throw new UncheckedCompileException(e);
      }
    }
    @Override public void visitMemberInterfaceDeclaration(    MemberInterfaceDeclaration mid){
      try {
        UnitCompiler.this.compile2(mid);
      }
 catch (      CompileException e) {
        throw new UncheckedCompileException(e);
      }
    }
    @Override public void visitPackageMemberInterfaceDeclaration(    PackageMemberInterfaceDeclaration pmid){
      try {
        UnitCompiler.this.compile2((PackageMemberTypeDeclaration)pmid);
      }
 catch (      CompileException e) {
        throw new UncheckedCompileException(e);
      }
    }
    @Override public void visitMemberClassDeclaration(    MemberClassDeclaration mcd){
      try {
        UnitCompiler.this.compile2(mcd);
      }
 catch (      CompileException e) {
        throw new UncheckedCompileException(e);
      }
    }
  }
;
  try {
    td.accept(tdv);
  }
 catch (  UncheckedCompileException uce) {
    throw uce.compileException;
  }
}
