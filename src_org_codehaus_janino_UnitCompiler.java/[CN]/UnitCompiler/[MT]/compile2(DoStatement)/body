{
  Object cvc=this.getConstantValue(ds.condition);
  if (cvc != UnitCompiler.NOT_CONSTANT) {
    if (Boolean.TRUE.equals(cvc)) {
      this.warning("DSTC",("Condition of DO statement is always TRUE; " + "the proper way of declaring an unconditional loop is \"for (;;)\""),ds.getLocation());
      return this.compileUnconditionalLoop(ds,ds.body,null);
    }
 else {
      this.warning("DSNR","DO statement never repeats",ds.getLocation());
    }
  }
  final CodeContext.Offset bodyOffset=this.codeContext.newOffset();
  ds.whereToContinue=null;
  if (!this.compile(ds.body) && ds.whereToContinue == null) {
    this.warning("DSNTC","\"do\" statement never tests its condition",ds.getLocation());
    if (ds.whereToBreak == null)     return false;
    ds.whereToBreak.set();
    ds.whereToBreak=null;
    return true;
  }
  if (ds.whereToContinue != null) {
    ds.whereToContinue.set();
    ds.whereToContinue=null;
  }
  this.compileBoolean(ds.condition,bodyOffset,UnitCompiler.JUMP_IF_TRUE);
  if (ds.whereToBreak != null) {
    ds.whereToBreak.set();
    ds.whereToBreak=null;
  }
  return true;
}
