{
  FileContainer container=new FileContainer(jarFile);
  HashMap<String,byte[]> files=new HashMap<String,byte[]>();
  ZipInputStream jis=new ZipInputStream(new FileInputStream(jarFile));
  ZipEntry entry;
  while ((entry=jis.getNextEntry()) != null) {
    try {
      final String name=entry.getName();
      final byte[] bytes=getBytes(jis);
      if (!files.containsKey(name)) {
        if (!name.endsWith(".class")) {
          if (!entry.isDirectory())           files.put(name,bytes);
        }
 else {
          String cafebabe=String.format("%02X%02X%02X%02X",bytes[0],bytes[1],bytes[2],bytes[3]);
          if (cafebabe.toLowerCase().equals("cafebabe")) {
            try {
              final ClassNode cn=getNode(bytes);
              container.classes.add(cn);
            }
 catch (            Exception e) {
              e.printStackTrace();
            }
          }
 else {
            System.out.println(jarFile + ">" + name+ ": Header does not start with CAFEBABE, ignoring.");
          }
          files.put(name,bytes);
        }
      }
    }
 catch (    Exception e) {
      new the.bytecode.club.bytecodeviewer.api.ExceptionUI(e);
    }
 finally {
      jis.closeEntry();
    }
  }
  jis.close();
  container.files=files;
  BytecodeViewer.files.add(container);
}
