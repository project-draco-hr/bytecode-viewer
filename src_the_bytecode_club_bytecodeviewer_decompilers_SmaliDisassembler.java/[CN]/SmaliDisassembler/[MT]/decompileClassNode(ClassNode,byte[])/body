{
  String fileStart=BytecodeViewer.tempDirectory + BytecodeViewer.fs + "temp";
  String start=MiscUtils.getUniqueName(fileStart,".class");
  final File tempClass=new File(start + ".class");
  final File tempZip=new File(start + ".jar");
  final File tempDex=new File(start + ".dex");
  final File tempSmali=new File(start + "-smali");
  try {
    final FileOutputStream fos=new FileOutputStream(tempClass);
    fos.write(b);
    fos.close();
  }
 catch (  final IOException e) {
    new the.bytecode.club.bytecodeviewer.api.ExceptionUI(e);
  }
  ZipUtils.zipFile(tempClass,tempZip);
  Dex2Jar.saveAsDex(tempZip,tempDex);
  try {
    org.jf.baksmali.main.main(new String[]{"-o",tempSmali.getAbsolutePath(),"-x",tempDex.getAbsolutePath()});
  }
 catch (  Exception e) {
    new the.bytecode.club.bytecodeviewer.api.ExceptionUI(e);
  }
  File outputSmali=null;
  boolean found=false;
  File current=tempSmali;
  while (!found) {
    File f=current.listFiles()[0];
    if (f.isDirectory())     current=f;
 else {
      outputSmali=f;
      found=true;
    }
  }
  try {
    return DiskReader.loadAsString(outputSmali.getAbsolutePath());
  }
 catch (  Exception e) {
    new the.bytecode.club.bytecodeviewer.api.ExceptionUI(e);
  }
  return null;
}
