{
  final int open=ph.indexOf("[");
  if (open >= 0) {
    if (!ph.endsWith("]")) {
      throw new IllegalArgumentException("Phoneme expression contains a '[' but does not end in ']'");
    }
    final String before=ph.substring(0,open);
    final String in=ph.substring(open + 1,ph.length() - 1);
    final Set<String> langs=new HashSet<String>(Arrays.asList(in.split("[+]")));
    return new Phoneme(before,Languages.LanguageSet.from(langs));
  }
 else {
    return new Phoneme(ph,Languages.ANY_LANGUAGE);
  }
}
