{
  int u=types[index];
  if (u == t) {
    return false;
  }
  if ((t & ~DIM) == NULL) {
    if (u == NULL) {
      return false;
    }
    t=NULL;
  }
  if (u == 0) {
    types[index]=t;
    return true;
  }
  int v;
  if ((u & BASE_KIND) == OBJECT || (u & DIM) != 0) {
    if (t == NULL) {
      return false;
    }
 else     if ((t & (DIM | BASE_KIND)) == (u & (DIM | BASE_KIND))) {
      if ((u & BASE_KIND) == OBJECT) {
        v=(t & DIM) | OBJECT | cw.getMergedType(t & BASE_VALUE,u & BASE_VALUE);
      }
 else {
        int vdim=ELEMENT_OF + (u & DIM);
        v=vdim | OBJECT | cw.addType("java/lang/Object");
      }
    }
 else     if ((t & BASE_KIND) == OBJECT || (t & DIM) != 0) {
      int tdim=(((t & DIM) == 0 || (t & BASE_KIND) == OBJECT) ? 0 : ELEMENT_OF) + (t & DIM);
      int udim=(((u & DIM) == 0 || (u & BASE_KIND) == OBJECT) ? 0 : ELEMENT_OF) + (u & DIM);
      v=Math.min(tdim,udim) | OBJECT | cw.addType("java/lang/Object");
    }
 else {
      v=TOP;
    }
  }
 else   if (u == NULL) {
    v=(t & BASE_KIND) == OBJECT || (t & DIM) != 0 ? t : TOP;
  }
 else {
    v=TOP;
  }
  if (u != v) {
    types[index]=v;
    return true;
  }
  return false;
}
