{
  return new Iterator(){
    private Iterator elementsIterator=IteratorCollection.this.elements.iterator();
    @Override public Object next(){
      if (this.elementsIterator != null) {
        if (this.elementsIterator.hasNext())         return this.elementsIterator.next();
        this.elementsIterator=null;
      }
      Object o=IteratorCollection.this.iterator.next();
      IteratorCollection.this.elements.add(o);
      return o;
    }
    @Override public boolean hasNext(){
      return ((this.elementsIterator != null && this.elementsIterator.hasNext()) || IteratorCollection.this.iterator.hasNext());
    }
    @Override public void remove(){
      throw new UnsupportedOperationException();
    }
  }
;
}
