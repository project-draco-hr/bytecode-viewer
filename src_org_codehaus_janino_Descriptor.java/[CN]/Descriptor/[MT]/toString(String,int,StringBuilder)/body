{
  int dimensions=0;
  while (idx < d.length() && d.charAt(idx) == '[') {
    ++dimensions;
    ++idx;
  }
  if (idx >= d.length())   throw new JaninoRuntimeException("Invalid descriptor \"" + d + "\"");
switch (d.charAt(idx)) {
case 'L':
{
      int idx2=d.indexOf(';',idx);
      if (idx2 == -1)       throw new JaninoRuntimeException("Invalid descriptor \"" + d + "\"");
      sb.append(d.substring(idx + 1,idx2).replace('/','.'));
      idx=idx2;
    }
  break;
case 'V':
sb.append("void");
break;
case 'B':
sb.append("byte");
break;
case 'C':
sb.append("char");
break;
case 'D':
sb.append("double");
break;
case 'F':
sb.append("float");
break;
case 'I':
sb.append("int");
break;
case 'J':
sb.append("long");
break;
case 'S':
sb.append("short");
break;
case 'Z':
sb.append("boolean");
break;
default :
throw new JaninoRuntimeException("Invalid descriptor \"" + d + "\"");
}
for (; dimensions > 0; --dimensions) sb.append("[]");
return idx + 1;
}
