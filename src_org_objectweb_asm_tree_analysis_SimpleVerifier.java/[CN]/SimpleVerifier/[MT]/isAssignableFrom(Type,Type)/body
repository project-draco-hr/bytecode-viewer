{
  if (t.equals(u)) {
    return true;
  }
  if (currentClass != null && t.equals(currentClass)) {
    if (getSuperClass(u) == null) {
      return false;
    }
 else {
      if (isInterface) {
        return u.getSort() == Type.OBJECT || u.getSort() == Type.ARRAY;
      }
      return isAssignableFrom(t,getSuperClass(u));
    }
  }
  if (currentClass != null && u.equals(currentClass)) {
    if (isAssignableFrom(t,currentSuperClass)) {
      return true;
    }
    if (currentClassInterfaces != null) {
      for (int i=0; i < currentClassInterfaces.size(); ++i) {
        Type v=currentClassInterfaces.get(i);
        if (isAssignableFrom(t,v)) {
          return true;
        }
      }
    }
    return false;
  }
  Class<?> tc=getClass(t);
  if (tc.isInterface()) {
    tc=Object.class;
  }
  return tc.isAssignableFrom(getClass(u));
}
