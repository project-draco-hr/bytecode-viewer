{
  if (!containsCommand(args))   return 1;
  try {
    CommandLine cmd=parser.parse(options,args);
    if (cmd.hasOption("list")) {
      System.out.println("Procyon");
      System.out.println("CFR");
      System.out.println("FernFlower");
      System.out.println("Krakatau");
      System.out.println("Krakatau-Bytecode");
      System.out.println("JD-GUI");
      System.out.println("Smali");
      return -1;
    }
 else     if (cmd.hasOption("help")) {
      for (      String s : new String[]{"-help                         Displays the help menu","-list                         Displays the available decompilers","-decompiler <decompiler>      Selects the decompiler, procyon by default","-i <input file>               Selects the input file","-o <output file>              Selects the output file","-nowait                       Doesn't wait for the user to read the CLI messages"})       System.out.println(s);
      return -1;
    }
 else {
      if (cmd.getOptionValue("i") == null) {
        System.err.println("Set the input with -i");
        return -1;
      }
      if (cmd.getOptionValue("o") == null) {
        System.err.println("Set the output with -o");
        return -1;
      }
      if (cmd.getOptionValue("t") == null) {
        System.err.println("Set the target with -t");
        return -1;
      }
      File input=new File(cmd.getOptionValue("i"));
      File output=new File(cmd.getOptionValue("o"));
      String decompiler=cmd.getOptionValue("decompiler");
      if (!input.exists()) {
        System.err.println(input.getAbsolutePath() + " does not exist.");
        return -1;
      }
      if (output.exists()) {
        System.err.println("WARNING: Deleted old " + output.getAbsolutePath() + ".");
        output.delete();
      }
      if (decompiler != null && !decompiler.equalsIgnoreCase("procyon") && !decompiler.equalsIgnoreCase("cfr") && !decompiler.equalsIgnoreCase("fernflower") && !decompiler.equalsIgnoreCase("krakatau") && !decompiler.equalsIgnoreCase("krakatau-bytecode") && !decompiler.equalsIgnoreCase("jd-gui") && !decompiler.equalsIgnoreCase("smali")) {
        System.out.println("Error, no decompiler called '" + decompiler + "' found. Type -decompiler-list for the list");
      }
      if (!cmd.hasOption("nowait"))       Thread.sleep(5 * 1000);
      return 0;
    }
  }
 catch (  Exception e) {
    new the.bytecode.club.bytecodeviewer.api.ExceptionUI(e);
  }
  return 1;
}
