{
  if (this.destination.offset == Offset.UNSET) {
    throw new JaninoRuntimeException("Cannot relocate branch to unset destination offset");
  }
  int offset=this.destination.offset - this.source.offset;
  if (!this.expanded && (offset > Short.MAX_VALUE || offset < Short.MIN_VALUE)) {
    final int pos=this.source.offset;
    CodeContext.this.pushInserter(this.source);
{
      CodeContext.this.makeSpace((short)-1,this.opcode == Opcode.GOTO ? 2 : this.opcode == Opcode.JSR ? 2 : 5);
    }
    CodeContext.this.popInserter();
    this.source.offset=pos;
    this.expanded=true;
    return false;
  }
  final byte[] ba;
  if (!this.expanded) {
    ba=new byte[]{(byte)this.opcode,(byte)(offset >> 8),(byte)offset};
  }
 else {
    if (this.opcode == Opcode.GOTO || this.opcode == Opcode.JSR) {
      ba=new byte[]{(byte)(this.opcode + 33),(byte)(offset >> 24),(byte)(offset >> 16),(byte)(offset >> 8),(byte)offset};
    }
 else {
      offset-=3;
      ba=new byte[]{CodeContext.invertBranchOpcode((byte)this.opcode),0,8,Opcode.GOTO_W,(byte)(offset >> 24),(byte)(offset >> 16),(byte)(offset >> 8),(byte)offset};
    }
  }
  System.arraycopy(ba,0,CodeContext.this.code,this.source.offset,ba.length);
  return true;
}
