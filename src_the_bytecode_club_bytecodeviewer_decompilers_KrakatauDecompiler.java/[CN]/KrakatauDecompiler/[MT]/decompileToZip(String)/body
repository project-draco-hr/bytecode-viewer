{
  if (BytecodeViewer.python.equals("")) {
    BytecodeViewer.showMessage("You need to set your Python (or PyPy for speed) 2.7 executable path.");
    BytecodeViewer.viewer.pythonC();
  }
  if (BytecodeViewer.rt.equals("")) {
    BytecodeViewer.showMessage("You need to set your JRE RT Library.\r\n(C:\\Program Files (x86)\\Java\\jre7\\lib\\rt.jar)");
    BytecodeViewer.viewer.rtC();
  }
  String ran=MiscUtils.randomString(32);
  final File tempDirectory=new File(BytecodeViewer.tempDirectory + BytecodeViewer.fs + ran+ BytecodeViewer.fs);
  tempDirectory.mkdir();
  final File tempJar=new File(BytecodeViewer.tempDirectory + BytecodeViewer.fs + "temp.jar");
  JarUtils.saveAsJar(BytecodeViewer.getLoadedClasses(),tempJar.getAbsolutePath());
  BytecodeViewer.sm.blocking=false;
  try {
    ProcessBuilder pb=new ProcessBuilder(BytecodeViewer.python,"-O",BytecodeViewer.krakatauWorkingDirectory + BytecodeViewer.fs + "decompile.py","-nauto","-path",BytecodeViewer.rt + ";" + tempJar.getAbsolutePath(),"-out",tempDirectory.getAbsolutePath(),tempJar.getAbsolutePath());
    Process process=pb.start();
    BytecodeViewer.createdProcesses.add(process);
    InputStream is=process.getInputStream();
    InputStreamReader isr=new InputStreamReader(is);
    BufferedReader br=new BufferedReader(isr);
    String line;
    while ((line=br.readLine()) != null) {
      System.out.println(line);
    }
    br.close();
    is=process.getErrorStream();
    isr=new InputStreamReader(is);
    br=new BufferedReader(isr);
    while ((line=br.readLine()) != null) {
      System.out.println(line);
    }
    br.close();
    int exitValue=process.waitFor();
    System.out.println("Exit Value is " + exitValue);
    ZipUtils.zipFolder(tempDirectory.getAbsolutePath(),zipName,ran);
    tempJar.delete();
  }
 catch (  Exception e) {
    new the.bytecode.club.bytecodeviewer.api.ExceptionUI(e);
  }
  BytecodeViewer.sm.blocking=true;
}
