{
  checkState();
  if (outer) {
    throw new IllegalStateException("visitOuterClass can be called only once.");
  }
  outer=true;
  if (owner == null) {
    throw new IllegalArgumentException("Illegal outer class owner");
  }
  if (desc != null) {
    CheckMethodAdapter.checkMethodDesc(desc);
  }
  super.visitOuterClass(owner,name,desc);
}
