{
  StringBuilder sb=new StringBuilder();
  sb.append(this.getAccess().toString()).append(' ');
  if (this.isStatic())   sb.append("static ");
  if (this.isAbstract())   sb.append("abstract ");
  try {
    sb.append(this.getReturnType().toString());
  }
 catch (  CompileException ex) {
    sb.append("<invalid type>");
  }
  sb.append(' ');
  sb.append(this.getDeclaringIClass().toString());
  sb.append('.');
  sb.append(this.getName());
  sb.append('(');
  try {
    IClass[] parameterTypes=this.getParameterTypes();
    for (int i=0; i < parameterTypes.length; ++i) {
      if (i > 0)       sb.append(", ");
      sb.append(parameterTypes[i].toString());
    }
  }
 catch (  CompileException ex) {
    sb.append("<invalid type>");
  }
  sb.append(')');
  try {
    IClass[] tes=this.getThrownExceptions();
    if (tes.length > 0) {
      sb.append(" throws ").append(tes[0]);
      for (int i=1; i < tes.length; ++i)       sb.append(", ").append(tes[i]);
    }
  }
 catch (  CompileException ex) {
    sb.append("<invalid thrown exception type>");
  }
  return sb.toString();
}
