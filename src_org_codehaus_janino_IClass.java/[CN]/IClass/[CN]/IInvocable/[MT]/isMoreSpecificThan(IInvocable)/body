{
  if (IClass.DEBUG)   System.out.print("\"" + this + "\".isMoreSpecificThan(\""+ that+ "\") => ");
  final boolean thatIsVararg;
  if ((thatIsVararg=that.isVarargs()) != this.isVarargs()) {
    return thatIsVararg;
  }
 else   if (thatIsVararg) {
    final IClass[] thisParameterTypes=this.getParameterTypes();
    final IClass[] thatParameterTypes=that.getParameterTypes();
    IClass[] t, u;
    int n, k;
    if (thisParameterTypes.length >= thatParameterTypes.length) {
      t=thisParameterTypes;
      u=thatParameterTypes;
      n=t.length;
      k=u.length;
      IClass[] s=u;
      final int kMinus1=k - 1;
      for (int j=0; j < kMinus1; ++j) {
        if (!s[j].isAssignableFrom(t[j])) {
          return false;
        }
      }
      final IClass sk1=s[kMinus1].getComponentType();
      final int nMinus1=n - 1;
      for (int j=kMinus1; j < nMinus1; ++j) {
        if (!sk1.isAssignableFrom(t[j])) {
          return false;
        }
      }
      if (!sk1.isAssignableFrom(t[nMinus1])) {
        return false;
      }
    }
 else {
      u=thisParameterTypes;
      t=thatParameterTypes;
      n=t.length;
      k=u.length;
      IClass[] s=t;
      final int kMinus1=k - 1;
      for (int j=0; j < kMinus1; ++j) {
        if (!s[j].isAssignableFrom(u[j])) {
          return false;
        }
      }
      final IClass uk1=u[kMinus1].getComponentType();
      final int nMinus1=n - 1;
      for (int j=kMinus1; j < nMinus1; ++j) {
        if (!s[j].isAssignableFrom(uk1)) {
          return false;
        }
      }
      if (!s[nMinus1].getComponentType().isAssignableFrom(uk1)) {
        return false;
      }
    }
    return true;
  }
  IClass[] thisParameterTypes=this.getParameterTypes();
  IClass[] thatParameterTypes=that.getParameterTypes();
  for (int i=0; i < thisParameterTypes.length; ++i) {
    if (!thatParameterTypes[i].isAssignableFrom(thisParameterTypes[i])) {
      if (IClass.DEBUG)       System.out.println("false");
      return false;
    }
  }
  if (IClass.DEBUG)   System.out.println("true");
  return !Arrays.equals(thisParameterTypes,thatParameterTypes);
}
