{
  byte tag=dis.readByte();
switch (tag) {
case 7:
    return new ConstantClassInfo(dis.readShort());
case 9:
  return new ConstantFieldrefInfo(dis.readShort(),dis.readShort());
case 10:
return new ConstantMethodrefInfo(dis.readShort(),dis.readShort());
case 11:
return new ConstantInterfaceMethodrefInfo(dis.readShort(),dis.readShort());
case 8:
return new ConstantStringInfo(dis.readShort());
case 3:
return new ConstantIntegerInfo(dis.readInt());
case 4:
return new ConstantFloatInfo(dis.readFloat());
case 5:
return new ConstantLongInfo(dis.readLong());
case 6:
return new ConstantDoubleInfo(dis.readDouble());
case 12:
return new ConstantNameAndTypeInfo(dis.readShort(),dis.readShort());
case 1:
return new ConstantUtf8Info(dis.readUTF());
default :
throw new ClassFormatError("Invalid constant pool tag " + tag);
}
}
