{
  short attributeNameIndex=dis.readShort();
  int attributeLength=dis.readInt();
  final byte[] ba=new byte[attributeLength];
  dis.readFully(ba);
  ByteArrayInputStream bais=new ByteArrayInputStream(ba);
  DataInputStream bdis=new DataInputStream(bais);
  String attributeName=this.getConstantUtf8(attributeNameIndex);
  AttributeInfo result;
  if ("ConstantValue".equals(attributeName)) {
    result=ConstantValueAttribute.loadBody(attributeNameIndex,bdis);
  }
 else   if ("Code".equals(attributeName)) {
    result=CodeAttribute.loadBody(attributeNameIndex,this,bdis);
  }
 else   if ("Exceptions".equals(attributeName)) {
    result=ExceptionsAttribute.loadBody(attributeNameIndex,bdis);
  }
 else   if ("InnerClasses".equals(attributeName)) {
    result=InnerClassesAttribute.loadBody(attributeNameIndex,bdis);
  }
 else   if ("Synthetic".equals(attributeName)) {
    result=SyntheticAttribute.loadBody(attributeNameIndex,bdis);
  }
 else   if ("SourceFile".equals(attributeName)) {
    result=SourceFileAttribute.loadBody(attributeNameIndex,bdis);
  }
 else   if ("LineNumberTable".equals(attributeName)) {
    result=LineNumberTableAttribute.loadBody(attributeNameIndex,bdis);
  }
 else   if ("LocalVariableTable".equals(attributeName)) {
    result=LocalVariableTableAttribute.loadBody(attributeNameIndex,bdis);
  }
 else   if ("Deprecated".equals(attributeName)) {
    result=DeprecatedAttribute.loadBody(attributeNameIndex,bdis);
  }
 else {
    return new AttributeInfo(attributeNameIndex){
      @Override protected void storeBody(      DataOutputStream dos) throws IOException {
        dos.write(ba);
      }
    }
;
  }
  if (bais.available() > 0) {
    throw new ClassFormatError((ba.length - bais.available()) + " bytes of trailing garbage in body of attribute \"" + attributeName+ "\"");
  }
  return result;
}
