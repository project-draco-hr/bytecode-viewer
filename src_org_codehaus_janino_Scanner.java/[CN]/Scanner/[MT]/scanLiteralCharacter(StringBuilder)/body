{
  if (this.nextChar == -1)   throw new CompileException("EOF in literal",this.location());
  if (this.nextChar == '\r' || this.nextChar == '\n') {
    throw new CompileException("Line break in literal not allowed",this.location());
  }
  if (this.nextChar != '\\') {
    sb.append((char)this.nextChar);
    this.readNextChar();
    return;
  }
  sb.append('\\');
  this.readNextChar();
{
    int idx="btnfr\"'\\".indexOf(this.nextChar);
    if (idx != -1) {
      sb.append((char)this.nextChar);
      this.readNextChar();
      return;
    }
  }
{
    int idx="01234567".indexOf(this.nextChar);
    if (idx != -1) {
      char firstChar=(char)this.nextChar;
      sb.append(firstChar);
      this.readNextChar();
      idx="01234567".indexOf(this.nextChar);
      if (idx == -1)       return;
      sb.append((char)this.nextChar);
      this.readNextChar();
      idx="01234567".indexOf(this.nextChar);
      if (idx == -1)       return;
      if ("0123".indexOf(firstChar) == -1) {
        throw new CompileException("Invalid octal escape",this.location());
      }
      sb.append((char)this.nextChar);
      this.readNextChar();
      return;
    }
  }
  throw new CompileException("Invalid escape sequence",this.location());
}
