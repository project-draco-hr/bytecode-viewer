{
  if (recentFiles)   for (  File f : files)   if (f.exists())   BytecodeViewer.addRecentFile(f);
  BytecodeViewer.viewer.setIcon(true);
  update=true;
  Thread t=new Thread(){
    @Override public void run(){
      try {
        for (        final File f : files) {
          final String fn=f.getName();
          if (!f.exists()) {
            update=false;
            showMessage("The file " + f.getAbsolutePath() + " could not be found.");
          }
 else {
            if (f.isDirectory()) {
              FileContainer container=new FileContainer(f);
              HashMap<String,byte[]> files=new HashMap<String,byte[]>();
              boolean finished=false;
              ArrayList<File> totalFiles=new ArrayList<File>();
              totalFiles.add(f);
              String dir=f.getAbsolutePath();
              while (!finished) {
                boolean added=false;
                for (int i=0; i < totalFiles.size(); i++) {
                  File child=totalFiles.get(i);
                  if (child.listFiles() != null)                   for (                  File rocket : child.listFiles())                   if (!totalFiles.contains(rocket)) {
                    totalFiles.add(rocket);
                    added=true;
                  }
                }
                if (!added) {
                  for (                  File child : totalFiles)                   if (child.isFile()) {
                    String fileName=child.getAbsolutePath().substring(dir.length() + 1,child.getAbsolutePath().length()).replaceAll("\\\\","\\/");
                    files.put(fileName,Files.readAllBytes(Paths.get(child.getAbsolutePath())));
                  }
                  finished=true;
                }
              }
              container.files=files;
              BytecodeViewer.files.add(container);
            }
 else {
              if (fn.endsWith(".jar") || fn.endsWith(".zip")) {
                try {
                  JarUtils.put(f);
                }
 catch (                final Exception e) {
                  new the.bytecode.club.bytecodeviewer.api.ExceptionUI(e);
                  update=false;
                }
              }
 else               if (fn.endsWith(".class")) {
                try {
                  byte[] bytes=JarUtils.getBytes(new FileInputStream(f));
                  String cafebabe=String.format("%02X%02X%02X%02X",bytes[0],bytes[1],bytes[2],bytes[3]);
                  if (cafebabe.toLowerCase().equals("cafebabe")) {
                    final ClassNode cn=JarUtils.getNode(bytes);
                    FileContainer container=new FileContainer(f);
                    container.files.put(fn,bytes);
                    container.add(cn);
                    BytecodeViewer.files.add(container);
                  }
 else {
                    showMessage(fn + ": Header does not start with CAFEBABE, ignoring.");
                    update=false;
                  }
                }
 catch (                final Exception e) {
                  new the.bytecode.club.bytecodeviewer.api.ExceptionUI(e);
                  update=false;
                }
              }
 else               if (fn.endsWith(".apk")) {
                try {
                  BytecodeViewer.viewer.setIcon(true);
                  FileContainer container=new FileContainer(f);
                  if (viewer.decodeAPKResources.isSelected()) {
                    File decodedResources=new File(tempDir,MiscUtils.randomString(32) + ".apk");
                    APKTool.decodeResources(f,decodedResources);
                    container.files=JarUtils.loadResources(decodedResources);
                  }
                  container.files.putAll(JarUtils.loadResources(f));
                  String name=getRandomizedName() + ".jar";
                  File output=new File(tempDir,name);
                  if (BytecodeViewer.viewer.apkConversionGroup.isSelected(BytecodeViewer.viewer.apkConversionDex.getModel()))                   Dex2Jar.dex2Jar(f,output);
 else                   if (BytecodeViewer.viewer.apkConversionGroup.isSelected(BytecodeViewer.viewer.apkConversionEnjarify.getModel()))                   Enjarify.apk2Jar(f,output);
                  for (                  ClassNode classNode : JarUtils.loadClasses(output)) {
                    container.add(classNode);
                  }
                  BytecodeViewer.viewer.setIcon(false);
                  BytecodeViewer.files.add(container);
                }
 catch (                final Exception e) {
                  new the.bytecode.club.bytecodeviewer.api.ExceptionUI(e);
                }
                return;
              }
 else               if (fn.endsWith(".dex")) {
                try {
                  BytecodeViewer.viewer.setIcon(true);
                  FileContainer container=new FileContainer(f);
                  String name=getRandomizedName() + ".jar";
                  File output=new File(tempDir,name);
                  if (BytecodeViewer.viewer.apkConversionGroup.isSelected(BytecodeViewer.viewer.apkConversionDex.getModel()))                   Dex2Jar.dex2Jar(f,output);
 else                   if (BytecodeViewer.viewer.apkConversionGroup.isSelected(BytecodeViewer.viewer.apkConversionEnjarify.getModel()))                   Enjarify.apk2Jar(f,output);
                  for (                  ClassNode classNode : JarUtils.loadClasses(output)) {
                    container.add(classNode);
                  }
                  BytecodeViewer.viewer.setIcon(false);
                  BytecodeViewer.files.add(container);
                }
 catch (                final Exception e) {
                  new the.bytecode.club.bytecodeviewer.api.ExceptionUI(e);
                }
                return;
              }
 else {
                HashMap<String,byte[]> files=new HashMap<String,byte[]>();
                byte[] bytes=JarUtils.getBytes(new FileInputStream(f));
                files.put(f.getName(),bytes);
                FileContainer container=new FileContainer(f);
                container.files=files;
                BytecodeViewer.files.add(container);
              }
            }
          }
        }
      }
 catch (      final Exception e) {
        new the.bytecode.club.bytecodeviewer.api.ExceptionUI(e);
      }
 finally {
        BytecodeViewer.viewer.setIcon(false);
        if (update)         try {
          MainViewerGUI.getComponent(FileNavigationPane.class).updateTree();
        }
 catch (        java.lang.NullPointerException e) {
        }
      }
    }
  }
;
  t.start();
}
