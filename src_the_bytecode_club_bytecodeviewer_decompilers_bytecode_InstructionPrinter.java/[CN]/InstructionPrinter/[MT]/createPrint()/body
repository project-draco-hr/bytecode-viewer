{
  ArrayList<String> info=new ArrayList<String>();
  ListIterator<?> it=mNode.instructions.iterator();
  while (it.hasNext()) {
    AbstractInsnNode ain=(AbstractInsnNode)it.next();
    String line="";
    if (ain instanceof VarInsnNode) {
      line=printVarInsnNode((VarInsnNode)ain,it);
    }
 else     if (ain instanceof IntInsnNode) {
      line=printIntInsnNode((IntInsnNode)ain,it);
    }
 else     if (ain instanceof FieldInsnNode) {
      line=printFieldInsnNode((FieldInsnNode)ain,it);
    }
 else     if (ain instanceof MethodInsnNode) {
      line=printMethodInsnNode((MethodInsnNode)ain,it);
    }
 else     if (ain instanceof LdcInsnNode) {
      line=printLdcInsnNode((LdcInsnNode)ain,it);
    }
 else     if (ain instanceof InsnNode) {
      line=printInsnNode((InsnNode)ain,it);
    }
 else     if (ain instanceof JumpInsnNode) {
      line=printJumpInsnNode((JumpInsnNode)ain,it);
    }
 else     if (ain instanceof LineNumberNode) {
      line=printLineNumberNode((LineNumberNode)ain,it);
    }
 else     if (ain instanceof LabelNode) {
      line=printLabelnode((LabelNode)ain);
    }
 else     if (ain instanceof TypeInsnNode) {
      line=printTypeInsnNode((TypeInsnNode)ain);
    }
 else     if (ain instanceof FrameNode) {
      line="";
    }
 else     if (ain instanceof IincInsnNode) {
      line=printIincInsnNode((IincInsnNode)ain);
    }
 else     if (ain instanceof TableSwitchInsnNode) {
      line=printTableSwitchInsnNode((TableSwitchInsnNode)ain);
    }
 else     if (ain instanceof LookupSwitchInsnNode) {
      line=printLookupSwitchInsnNode((LookupSwitchInsnNode)ain);
    }
 else {
      line+="UNADDED OPCODE: " + nameOpcode(ain.getOpcode()) + " "+ ain.toString();
    }
    if (!line.equals("")) {
      if (match)       if (matchedInsns.contains(ain))       line="   -> " + line;
      info.add(line);
    }
  }
  return info;
}
