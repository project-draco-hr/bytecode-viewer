{
  final int schedule[]=new int[32];
  int c=fourBytesToInt(key,0);
  int d=fourBytesToInt(key,4);
  final int results[]=new int[2];
  permOp(d,c,4,0xf0f0f0f,results);
  d=results[0];
  c=results[1];
  c=hPermOp(c,-2,0xcccc0000);
  d=hPermOp(d,-2,0xcccc0000);
  permOp(d,c,1,0x55555555,results);
  d=results[0];
  c=results[1];
  permOp(c,d,8,0xff00ff,results);
  c=results[0];
  d=results[1];
  permOp(d,c,1,0x55555555,results);
  d=results[0];
  c=results[1];
  d=(d & 0xff) << 16 | d & 0xff00 | (d & 0xff0000) >>> 16 | (c & 0xf0000000) >>> 4;
  c&=0xfffffff;
  int j=0;
  for (int i=0; i < 16; i++) {
    if (SHIFT2[i]) {
      c=c >>> 2 | c << 26;
      d=d >>> 2 | d << 26;
    }
 else {
      c=c >>> 1 | c << 27;
      d=d >>> 1 | d << 27;
    }
    c&=0xfffffff;
    d&=0xfffffff;
    int s=SKB[0][c & 0x3f] | SKB[1][c >>> 6 & 0x3 | c >>> 7 & 0x3c] | SKB[2][c >>> 13 & 0xf | c >>> 14 & 0x30]| SKB[3][c >>> 20 & 0x1 | c >>> 21 & 0x6 | c >>> 22 & 0x38];
    final int t=SKB[4][d & 0x3f] | SKB[5][d >>> 7 & 0x3 | d >>> 8 & 0x3c] | SKB[6][d >>> 15 & 0x3f]| SKB[7][d >>> 21 & 0xf | d >>> 22 & 0x30];
    schedule[j++]=(t << 16 | s & 0xffff);
    s=s >>> 16 | t & 0xffff0000;
    s=s << 4 | s >>> 28;
    schedule[j++]=s;
  }
  return schedule;
}
