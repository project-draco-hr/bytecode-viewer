{
  ZipInputStream jis=new ZipInputStream(new FileInputStream(jarFile));
  ZipEntry entry;
  Set<LoadedNodeData> set=new HashSet<LoadedNodeData>();
  while ((entry=jis.getNextEntry()) != null) {
    try {
      String name=entry.getName();
      if (name.endsWith(".class")) {
        byte[] bytes=JarUtils.getBytes(jis);
        String magic=String.format("%02X",bytes[0]) + String.format("%02X",bytes[1]) + String.format("%02X",bytes[2])+ String.format("%02X",bytes[3]);
        if (magic.toLowerCase().equals("cafebabe")) {
          try {
            ClassReader cr=new ClassReader(bytes);
            ClassNode cn=new ClassNode();
            cr.accept(cn,0);
            LoadedNodeData data=new LoadedNodeData(bytes,cn);
            set.add(data);
          }
 catch (          Exception e) {
            e.printStackTrace();
          }
        }
 else {
          System.out.println(jarFile + ">" + name+ ": Header does not start with CAFEBABE, ignoring.");
        }
      }
    }
 catch (    Exception e) {
      new the.bytecode.club.bytecodeviewer.api.ExceptionUI(e);
    }
 finally {
      jis.closeEntry();
    }
  }
  jis.close();
  return set;
}
