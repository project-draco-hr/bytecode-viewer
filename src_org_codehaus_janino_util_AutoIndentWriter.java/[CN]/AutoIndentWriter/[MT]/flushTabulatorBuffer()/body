{
  List<List<StringBuilder>> lineGroups=new ArrayList();
  lineGroups.add(new ArrayList<StringBuilder>());
  for (  StringBuilder line : this.tabulatorBuffer) {
    int idx=0;
    if (line.charAt(0) == AutoIndentWriter.INDENT) {
      lineGroups.add(new ArrayList<StringBuilder>());
      ++idx;
    }
    if (line.charAt(idx) == AutoIndentWriter.UNINDENT) {
      AutoIndentWriter.resolveTabs(lineGroups.remove(lineGroups.size() - 1));
      ++idx;
    }
    if (line.charAt(idx) == AutoIndentWriter.CLEAR_TABULATORS) {
      List<StringBuilder> lg=lineGroups.get(lineGroups.size() - 1);
      AutoIndentWriter.resolveTabs(lg);
      lg.clear();
      line.deleteCharAt(idx);
    }
    for (int i=0; i < line.length(); ++i) {
      if (line.charAt(i) == AutoIndentWriter.TABULATOR) {
        ((List<StringBuilder>)lineGroups.get(lineGroups.size() - 1)).add(line);
      }
    }
  }
  for (  List<StringBuilder> lg : lineGroups)   AutoIndentWriter.resolveTabs(lg);
  int ind=this.tabulatorIndentation;
  for (  StringBuilder sb : this.tabulatorBuffer) {
    String line=sb.toString();
    if (line.charAt(0) == AutoIndentWriter.INDENT) {
      ++ind;
      line=line.substring(1);
    }
    if (line.charAt(0) == AutoIndentWriter.UNINDENT) {
      --ind;
      line=line.substring(1);
    }
    if ("\r\n".indexOf(line.charAt(0)) == -1) {
      for (int i=0; i < ind; ++i)       this.out.write("    ");
    }
    this.out.write(line.toString());
  }
  this.tabulatorBuffer=null;
}
