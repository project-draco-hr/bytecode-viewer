{
  List<Integer> tabulatorOffsets=new ArrayList<Integer>();
  for (  StringBuilder line : lineGroup) {
    int previousTab=0;
    if (line.charAt(previousTab) == AutoIndentWriter.INDENT)     ++previousTab;
    if (line.charAt(previousTab) == AutoIndentWriter.UNINDENT)     ++previousTab;
    int tabCount=0;
    for (int i=previousTab; i < line.length(); ++i) {
      if (line.charAt(i) == AutoIndentWriter.TABULATOR) {
        int tabOffset=i - previousTab;
        previousTab=i;
        if (tabCount >= tabulatorOffsets.size()) {
          tabulatorOffsets.add(new Integer(tabOffset));
        }
 else {
          if (tabOffset > ((Integer)tabulatorOffsets.get(tabCount)).intValue()) {
            tabulatorOffsets.set(tabCount,new Integer(tabOffset));
          }
        }
        ++tabCount;
      }
    }
  }
  for (Iterator<StringBuilder> it=lineGroup.iterator(); it.hasNext(); ) {
    StringBuilder line=(StringBuilder)it.next();
    int tabCount=0;
    int previousTab=0;
    if (line.charAt(previousTab) == AutoIndentWriter.INDENT)     ++previousTab;
    if (line.charAt(previousTab) == AutoIndentWriter.UNINDENT)     ++previousTab;
    for (int i=previousTab; i < line.length(); ++i) {
      if (line.charAt(i) == AutoIndentWriter.TABULATOR) {
        int tabOffset=i - previousTab;
        int n=((Integer)tabulatorOffsets.get(tabCount++)).intValue() - tabOffset;
        line.replace(i,i + 1,AutoIndentWriter.spaces(n));
        i+=n - 1;
        previousTab=i;
      }
    }
  }
}
