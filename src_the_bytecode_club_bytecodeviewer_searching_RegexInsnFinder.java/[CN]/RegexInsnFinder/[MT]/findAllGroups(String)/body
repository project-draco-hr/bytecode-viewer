{
  final List<AbstractInsnNode[][]> results=new ArrayList<AbstractInsnNode[][]>();
  try {
    final Matcher regexMatcher=Pattern.compile(processRegex(regex),Pattern.MULTILINE).matcher(insnString);
    if (regexMatcher.find()) {
      final AbstractInsnNode[][] result=new AbstractInsnNode[regexMatcher.groupCount() + 1][0];
      for (int i=0; i <= regexMatcher.groupCount(); i++) {
        result[i]=makeResult(regexMatcher.start(i),regexMatcher.end(i));
      }
      results.add(result);
    }
  }
 catch (  final PatternSyntaxException ex) {
    new the.bytecode.club.bytecodeviewer.api.ExceptionUI(ex);
  }
  return results;
}
