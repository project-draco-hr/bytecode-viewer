{
  if (this.nest[this.nest.length - 1].hasNext())   return true;
  int i=this.nest.length - 2;
  if (i < 0)   return false;
  for (; ; ) {
    if (!this.nest[i].hasNext()) {
      if (i == 0)       return false;
      --i;
    }
 else {
      if (i == this.nest.length - 1)       return true;
      Object o=this.nest[i].next();
      if (o instanceof Iterator) {
        this.nest[++i]=(Iterator)o;
      }
 else       if (o instanceof Object[]) {
        this.nest[++i]=Arrays.asList((Object[])o).iterator();
      }
 else       if (o instanceof Collection) {
        this.nest[++i]=((Collection)o).iterator();
      }
 else       if (o instanceof Enumeration) {
        this.nest[++i]=new EnumerationIterator<Object>((Enumeration)o);
      }
 else {
        throw new UniterableElementException();
      }
    }
  }
}
