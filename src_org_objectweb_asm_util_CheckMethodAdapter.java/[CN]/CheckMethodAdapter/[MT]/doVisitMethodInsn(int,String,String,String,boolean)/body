{
  checkStartCode();
  checkEndCode();
  checkOpcode(opcode,5);
  if (opcode != Opcodes.INVOKESPECIAL || !"<init>".equals(name)) {
    checkMethodIdentifier(version,name,"name");
  }
  checkInternalName(owner,"owner");
  checkMethodDesc(desc);
  if (opcode == Opcodes.INVOKEVIRTUAL && itf) {
    throw new IllegalArgumentException("INVOKEVIRTUAL can't be used with interfaces");
  }
  if (opcode == Opcodes.INVOKEINTERFACE && !itf) {
    throw new IllegalArgumentException("INVOKEINTERFACE can't be used with classes");
  }
  if (mv != null) {
    mv.visitMethodInsn(opcode,owner,name,desc,itf);
  }
  ++insnCount;
}
