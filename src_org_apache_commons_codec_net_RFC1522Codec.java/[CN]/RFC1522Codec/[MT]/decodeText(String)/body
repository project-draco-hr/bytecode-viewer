{
  if (text == null) {
    return null;
  }
  if (!text.startsWith(PREFIX) || !text.endsWith(POSTFIX)) {
    throw new DecoderException("RFC 1522 violation: malformed encoded content");
  }
  final int terminator=text.length() - 2;
  int from=2;
  int to=text.indexOf(SEP,from);
  if (to == terminator) {
    throw new DecoderException("RFC 1522 violation: charset token not found");
  }
  final String charset=text.substring(from,to);
  if (charset.equals("")) {
    throw new DecoderException("RFC 1522 violation: charset not specified");
  }
  from=to + 1;
  to=text.indexOf(SEP,from);
  if (to == terminator) {
    throw new DecoderException("RFC 1522 violation: encoding token not found");
  }
  final String encoding=text.substring(from,to);
  if (!getEncoding().equalsIgnoreCase(encoding)) {
    throw new DecoderException("This codec cannot decode " + encoding + " encoded content");
  }
  from=to + 1;
  to=text.indexOf(SEP,from);
  byte[] data=StringUtils.getBytesUsAscii(text.substring(from,to));
  data=doDecoding(data);
  return new String(data,charset);
}
