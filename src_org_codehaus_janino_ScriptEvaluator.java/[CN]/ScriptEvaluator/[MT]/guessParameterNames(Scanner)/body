{
  Parser parser=new Parser(scanner);
  while (parser.peek("import"))   parser.parseImportDeclaration();
  Java.Block block=new Java.Block(scanner.location());
  while (!parser.peekEof())   block.addStatement(parser.parseBlockStatement());
  final Set<String> localVariableNames=new HashSet();
  final Set<String> parameterNames=new HashSet();
  new Traverser(){
    @Override public void traverseLocalVariableDeclarationStatement(    Java.LocalVariableDeclarationStatement lvds){
      for (      VariableDeclarator vd : lvds.variableDeclarators)       localVariableNames.add(vd.name);
      super.traverseLocalVariableDeclarationStatement(lvds);
    }
    @Override public void traverseAmbiguousName(    Java.AmbiguousName an){
      for (int i=0; i < an.identifiers.length; ++i) {
        if (Character.isUpperCase(an.identifiers[i].charAt(0)))         return;
      }
      if (localVariableNames.contains(an.identifiers[0]))       return;
      parameterNames.add(an.identifiers[0]);
    }
  }
.traverseBlock(block);
  return (String[])parameterNames.toArray(new String[parameterNames.size()]);
}
