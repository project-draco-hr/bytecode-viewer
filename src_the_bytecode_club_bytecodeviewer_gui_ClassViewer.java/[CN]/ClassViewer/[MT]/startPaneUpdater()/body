{
  if (BytecodeViewer.viewer.decompilerGroup1.isSelected(BytecodeViewer.viewer.panel1None.getModel()))   pane1=0;
 else   if (BytecodeViewer.viewer.decompilerGroup1.isSelected(BytecodeViewer.viewer.panel1Proc.getModel()))   pane1=1;
 else   if (BytecodeViewer.viewer.decompilerGroup1.isSelected(BytecodeViewer.viewer.panel1CFR.getModel()))   pane1=2;
 else   if (BytecodeViewer.viewer.decompilerGroup1.isSelected(BytecodeViewer.viewer.panel1Fern.getModel()))   pane1=3;
 else   if (BytecodeViewer.viewer.decompilerGroup1.isSelected(BytecodeViewer.viewer.panel1Bytecode.getModel()))   pane1=4;
 else   if (BytecodeViewer.viewer.decompilerGroup1.isSelected(BytecodeViewer.viewer.panel1Hexcode.getModel()))   pane1=5;
  if (BytecodeViewer.viewer.decompilerGroup2.isSelected(BytecodeViewer.viewer.panel2None.getModel()))   pane2=0;
 else   if (BytecodeViewer.viewer.decompilerGroup2.isSelected(BytecodeViewer.viewer.panel2Proc.getModel()))   pane2=1;
 else   if (BytecodeViewer.viewer.decompilerGroup2.isSelected(BytecodeViewer.viewer.panel2CFR.getModel()))   pane2=2;
 else   if (BytecodeViewer.viewer.decompilerGroup2.isSelected(BytecodeViewer.viewer.panel2Fern.getModel()))   pane2=3;
 else   if (BytecodeViewer.viewer.decompilerGroup2.isSelected(BytecodeViewer.viewer.panel2Bytecode.getModel()))   pane2=4;
 else   if (BytecodeViewer.viewer.decompilerGroup2.isSelected(BytecodeViewer.viewer.panel2Hexcode.getModel()))   pane2=5;
  if (BytecodeViewer.viewer.decompilerGroup3.isSelected(BytecodeViewer.viewer.panel3None.getModel()))   pane3=0;
 else   if (BytecodeViewer.viewer.decompilerGroup3.isSelected(BytecodeViewer.viewer.panel3Proc.getModel()))   pane3=1;
 else   if (BytecodeViewer.viewer.decompilerGroup3.isSelected(BytecodeViewer.viewer.panel3CFR.getModel()))   pane3=2;
 else   if (BytecodeViewer.viewer.decompilerGroup3.isSelected(BytecodeViewer.viewer.panel3Fern.getModel()))   pane3=3;
 else   if (BytecodeViewer.viewer.decompilerGroup3.isSelected(BytecodeViewer.viewer.panel3Bytecode.getModel()))   pane3=4;
 else   if (BytecodeViewer.viewer.decompilerGroup3.isSelected(BytecodeViewer.viewer.panel3Hexcode.getModel()))   pane3=5;
  t=new PaneUpdaterThread(){
    @Override public void doShit(){
      panel1.removeAll();
      panel2.removeAll();
      panel3.removeAll();
      if (pane1 != 0 && pane1 != 5)       panel1.add(panel1Search,BorderLayout.NORTH);
      if (pane2 != 0 && pane2 != 5)       panel2.add(panel2Search,BorderLayout.NORTH);
      if (pane3 != 0 && pane3 != 5)       panel3.add(panel3Search,BorderLayout.NORTH);
      if (pane1 == 1) {
        RSyntaxTextArea panelArea=new RSyntaxTextArea();
        panelArea.setSyntaxEditingStyle(SyntaxConstants.SYNTAX_STYLE_JAVA);
        panelArea.setCodeFoldingEnabled(true);
        panelArea.setAntiAliasingEnabled(true);
        RTextScrollPane scrollPane=new RTextScrollPane(panelArea);
        panelArea.setText(proc_dc.decompileClassNode(cn));
        panelArea.setCaretPosition(0);
        panel1.add(scrollPane);
      }
      if (pane1 == 2) {
        RSyntaxTextArea panelArea=new RSyntaxTextArea();
        panelArea.setSyntaxEditingStyle(SyntaxConstants.SYNTAX_STYLE_JAVA);
        panelArea.setCodeFoldingEnabled(true);
        panelArea.setAntiAliasingEnabled(true);
        RTextScrollPane scrollPane=new RTextScrollPane(panelArea);
        panelArea.setText(cfr_dc.decompileClassNode(cn));
        panelArea.setCaretPosition(0);
        panel1.add(scrollPane);
      }
      if (pane1 == 3) {
        RSyntaxTextArea panelArea=new RSyntaxTextArea();
        panelArea.setSyntaxEditingStyle(SyntaxConstants.SYNTAX_STYLE_JAVA);
        panelArea.setCodeFoldingEnabled(true);
        panelArea.setAntiAliasingEnabled(true);
        RTextScrollPane scrollPane=new RTextScrollPane(panelArea);
        panelArea.setText(ff_dc.decompileClassNode(cn));
        panelArea.setCaretPosition(0);
        panel1.add(scrollPane);
      }
      if (pane1 == 4) {
        RSyntaxTextArea bytecodeArea=new RSyntaxTextArea();
        bytecodeArea.setSyntaxEditingStyle(SyntaxConstants.SYNTAX_STYLE_JAVA);
        bytecodeArea.setCodeFoldingEnabled(true);
        bytecodeArea.setAntiAliasingEnabled(true);
        RTextScrollPane bytecodeSPane=new RTextScrollPane(bytecodeArea);
        bytecodeArea.setText(ClassNodeDecompiler.decompile(cn));
        bytecodeArea.setCaretPosition(0);
        panel1.add(bytecodeSPane);
      }
      if (pane1 == 5) {
        final ClassWriter cw=new ClassWriter(0);
        cn.accept(cw);
        JHexEditor hex=new JHexEditor(cw.toByteArray());
        panel1.add(hex);
      }
      if (pane2 == 1) {
        RSyntaxTextArea panelArea=new RSyntaxTextArea();
        panelArea.setSyntaxEditingStyle(SyntaxConstants.SYNTAX_STYLE_JAVA);
        panelArea.setCodeFoldingEnabled(true);
        panelArea.setAntiAliasingEnabled(true);
        RTextScrollPane scrollPane=new RTextScrollPane(panelArea);
        panelArea.setText(proc_dc.decompileClassNode(cn));
        panelArea.setCaretPosition(0);
        panel2.add(scrollPane);
      }
      if (pane2 == 2) {
        RSyntaxTextArea panelArea=new RSyntaxTextArea();
        panelArea.setSyntaxEditingStyle(SyntaxConstants.SYNTAX_STYLE_JAVA);
        panelArea.setCodeFoldingEnabled(true);
        panelArea.setAntiAliasingEnabled(true);
        RTextScrollPane scrollPane=new RTextScrollPane(panelArea);
        panelArea.setText(cfr_dc.decompileClassNode(cn));
        panelArea.setCaretPosition(0);
        panel2.add(scrollPane);
      }
      if (pane2 == 3) {
        RSyntaxTextArea panelArea=new RSyntaxTextArea();
        panelArea.setSyntaxEditingStyle(SyntaxConstants.SYNTAX_STYLE_JAVA);
        panelArea.setCodeFoldingEnabled(true);
        panelArea.setAntiAliasingEnabled(true);
        RTextScrollPane scrollPane=new RTextScrollPane(panelArea);
        panelArea.setText(ff_dc.decompileClassNode(cn));
        panelArea.setCaretPosition(0);
        panel2.add(scrollPane);
      }
      if (pane2 == 4) {
        RSyntaxTextArea paneArea=new RSyntaxTextArea();
        paneArea.setSyntaxEditingStyle(SyntaxConstants.SYNTAX_STYLE_JAVA);
        paneArea.setCodeFoldingEnabled(true);
        paneArea.setAntiAliasingEnabled(true);
        RTextScrollPane scrollPane=new RTextScrollPane(paneArea);
        paneArea.setText(ClassNodeDecompiler.decompile(cn));
        paneArea.setCaretPosition(0);
        panel2.add(scrollPane);
      }
      if (pane2 == 5) {
        final ClassWriter cw=new ClassWriter(0);
        cn.accept(cw);
        JHexEditor hex=new JHexEditor(cw.toByteArray());
        panel2.add(hex);
      }
      if (pane3 == 1) {
        RSyntaxTextArea panelArea=new RSyntaxTextArea();
        panelArea.setSyntaxEditingStyle(SyntaxConstants.SYNTAX_STYLE_JAVA);
        panelArea.setCodeFoldingEnabled(true);
        panelArea.setAntiAliasingEnabled(true);
        RTextScrollPane scrollPane=new RTextScrollPane(panelArea);
        panelArea.setText(proc_dc.decompileClassNode(cn));
        panelArea.setCaretPosition(0);
        panel3.add(scrollPane);
      }
      if (pane3 == 2) {
        RSyntaxTextArea panelArea=new RSyntaxTextArea();
        panelArea.setSyntaxEditingStyle(SyntaxConstants.SYNTAX_STYLE_JAVA);
        panelArea.setCodeFoldingEnabled(true);
        panelArea.setAntiAliasingEnabled(true);
        RTextScrollPane scrollPane=new RTextScrollPane(panelArea);
        panelArea.setText(cfr_dc.decompileClassNode(cn));
        panelArea.setCaretPosition(0);
        panel3.add(scrollPane);
      }
      if (pane3 == 3) {
        RSyntaxTextArea panelArea=new RSyntaxTextArea();
        panelArea.setSyntaxEditingStyle(SyntaxConstants.SYNTAX_STYLE_JAVA);
        panelArea.setCodeFoldingEnabled(true);
        panelArea.setAntiAliasingEnabled(true);
        RTextScrollPane scrollPane=new RTextScrollPane(panelArea);
        panelArea.setText(ff_dc.decompileClassNode(cn));
        panelArea.setCaretPosition(0);
        panel3.add(scrollPane);
      }
      if (pane3 == 4) {
        RSyntaxTextArea paneArea=new RSyntaxTextArea();
        paneArea.setSyntaxEditingStyle(SyntaxConstants.SYNTAX_STYLE_JAVA);
        paneArea.setCodeFoldingEnabled(true);
        paneArea.setAntiAliasingEnabled(true);
        RTextScrollPane scrollPane=new RTextScrollPane(paneArea);
        paneArea.setText(ClassNodeDecompiler.decompile(cn));
        paneArea.setCaretPosition(0);
        panel3.add(scrollPane);
      }
      if (pane3 == 5) {
        final ClassWriter cw=new ClassWriter(0);
        cn.accept(cw);
        JHexEditor hex=new JHexEditor(cw.toByteArray());
        panel3.add(hex);
      }
      resetDivider();
      BytecodeViewer.viewer.setIcon(false);
    }
  }
;
  t.start();
}
