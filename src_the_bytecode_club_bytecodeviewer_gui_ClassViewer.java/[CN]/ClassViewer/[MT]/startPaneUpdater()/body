{
  t=new PaneUpdaterThread(){
    String s="";
    @Override public void doShit(){
      final String b=ClassNodeDecompiler.decompile(cn);
      if (BytecodeViewer.viewer.sourcePane.isSelected()) {
        if (BytecodeViewer.viewer.decompilerGroup.isSelected(BytecodeViewer.viewer.fernflowerDec.getModel()))         s=ff_dc.decompileClassNode(cn);
 else         if (BytecodeViewer.viewer.decompilerGroup.isSelected(BytecodeViewer.viewer.procyonDec.getModel()))         s=proc_dc.decompileClassNode(cn);
 else         if (BytecodeViewer.viewer.decompilerGroup.isSelected(BytecodeViewer.viewer.cfrDec.getModel()))         s=cfr_dc.decompileClassNode(cn);
      }
      SwingUtilities.invokeLater(new Runnable(){
        public void run(){
          RSyntaxTextArea bytecodeArea=new RSyntaxTextArea();
          bytecodeArea.setSyntaxEditingStyle(SyntaxConstants.SYNTAX_STYLE_JAVA);
          bytecodeArea.setCodeFoldingEnabled(true);
          bytecodeArea.setAntiAliasingEnabled(true);
          RTextScrollPane bytecodeSPane=new RTextScrollPane(bytecodeArea);
          bytecodeArea.setText(b);
          RSyntaxTextArea sourcecodeArea=new RSyntaxTextArea();
          sourcecodeArea.setSyntaxEditingStyle(SyntaxConstants.SYNTAX_STYLE_JAVA);
          sourcecodeArea.setCodeFoldingEnabled(true);
          sourcecodeArea.setAntiAliasingEnabled(true);
          RTextScrollPane sourcecodeSPane=new RTextScrollPane(sourcecodeArea);
          sourcecodeArea.setText(s);
          if (BytecodeViewer.viewer.bytecodePane.isSelected()) {
            bytePanel.removeAll();
            bytePanel.add(bytecodeSPane);
          }
          if (BytecodeViewer.viewer.sourcePane.isSelected()) {
            decompPanel.removeAll();
            decompPanel.add(sourcecodeSPane);
          }
          bytecodeArea.setCaretPosition(0);
          sourcecodeArea.setCaretPosition(0);
          BytecodeViewer.viewer.setIcon(false);
        }
      }
);
    }
  }
;
  t.start();
}
