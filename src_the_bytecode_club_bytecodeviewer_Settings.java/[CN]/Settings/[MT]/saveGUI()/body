{
  try {
    DiskWriter.replaceFile(BytecodeViewer.settingsName,"",false);
    DiskWriter.writeNewLine(BytecodeViewer.settingsName,String.valueOf(BytecodeViewer.viewer.rbr.isSelected()),false);
    DiskWriter.writeNewLine(BytecodeViewer.settingsName,String.valueOf(BytecodeViewer.viewer.rsy.isSelected()),false);
    DiskWriter.writeNewLine(BytecodeViewer.settingsName,String.valueOf(BytecodeViewer.viewer.din.isSelected()),false);
    DiskWriter.writeNewLine(BytecodeViewer.settingsName,String.valueOf(BytecodeViewer.viewer.dc4.isSelected()),false);
    DiskWriter.writeNewLine(BytecodeViewer.settingsName,String.valueOf(BytecodeViewer.viewer.das.isSelected()),false);
    DiskWriter.writeNewLine(BytecodeViewer.settingsName,String.valueOf(BytecodeViewer.viewer.hes.isSelected()),false);
    DiskWriter.writeNewLine(BytecodeViewer.settingsName,String.valueOf(BytecodeViewer.viewer.hdc.isSelected()),false);
    DiskWriter.writeNewLine(BytecodeViewer.settingsName,String.valueOf(BytecodeViewer.viewer.dgs.isSelected()),false);
    DiskWriter.writeNewLine(BytecodeViewer.settingsName,String.valueOf(BytecodeViewer.viewer.ner.isSelected()),false);
    DiskWriter.writeNewLine(BytecodeViewer.settingsName,String.valueOf(BytecodeViewer.viewer.den.isSelected()),false);
    DiskWriter.writeNewLine(BytecodeViewer.settingsName,String.valueOf(BytecodeViewer.viewer.rgn.isSelected()),false);
    DiskWriter.writeNewLine(BytecodeViewer.settingsName,String.valueOf(BytecodeViewer.viewer.bto.isSelected()),false);
    DiskWriter.writeNewLine(BytecodeViewer.settingsName,String.valueOf(BytecodeViewer.viewer.nns.isSelected()),false);
    DiskWriter.writeNewLine(BytecodeViewer.settingsName,String.valueOf(BytecodeViewer.viewer.uto.isSelected()),false);
    DiskWriter.writeNewLine(BytecodeViewer.settingsName,String.valueOf(BytecodeViewer.viewer.udv.isSelected()),false);
    DiskWriter.writeNewLine(BytecodeViewer.settingsName,String.valueOf(BytecodeViewer.viewer.rer.isSelected()),false);
    DiskWriter.writeNewLine(BytecodeViewer.settingsName,String.valueOf(BytecodeViewer.viewer.fdi.isSelected()),false);
    DiskWriter.writeNewLine(BytecodeViewer.settingsName,String.valueOf(BytecodeViewer.viewer.asc.isSelected()),false);
    DiskWriter.writeNewLine(BytecodeViewer.settingsName,String.valueOf(BytecodeViewer.viewer.decodeenumswitch.isSelected()),false);
    DiskWriter.writeNewLine(BytecodeViewer.settingsName,String.valueOf(BytecodeViewer.viewer.sugarenums.isSelected()),false);
    DiskWriter.writeNewLine(BytecodeViewer.settingsName,String.valueOf(BytecodeViewer.viewer.decodestringswitch.isSelected()),false);
    DiskWriter.writeNewLine(BytecodeViewer.settingsName,String.valueOf(BytecodeViewer.viewer.arrayiter.isSelected()),false);
    DiskWriter.writeNewLine(BytecodeViewer.settingsName,String.valueOf(BytecodeViewer.viewer.collectioniter.isSelected()),false);
    DiskWriter.writeNewLine(BytecodeViewer.settingsName,String.valueOf(BytecodeViewer.viewer.innerclasses.isSelected()),false);
    DiskWriter.writeNewLine(BytecodeViewer.settingsName,String.valueOf(BytecodeViewer.viewer.removeboilerplate.isSelected()),false);
    DiskWriter.writeNewLine(BytecodeViewer.settingsName,String.valueOf(BytecodeViewer.viewer.removeinnerclasssynthetics.isSelected()),false);
    DiskWriter.writeNewLine(BytecodeViewer.settingsName,String.valueOf(BytecodeViewer.viewer.decodelambdas.isSelected()),false);
    DiskWriter.writeNewLine(BytecodeViewer.settingsName,String.valueOf(BytecodeViewer.viewer.hidebridgemethods.isSelected()),false);
    DiskWriter.writeNewLine(BytecodeViewer.settingsName,String.valueOf(BytecodeViewer.viewer.liftconstructorinit.isSelected()),false);
    DiskWriter.writeNewLine(BytecodeViewer.settingsName,String.valueOf(BytecodeViewer.viewer.removedeadmethods.isSelected()),false);
    DiskWriter.writeNewLine(BytecodeViewer.settingsName,String.valueOf(BytecodeViewer.viewer.removebadgenerics.isSelected()),false);
    DiskWriter.writeNewLine(BytecodeViewer.settingsName,String.valueOf(BytecodeViewer.viewer.sugarasserts.isSelected()),false);
    DiskWriter.writeNewLine(BytecodeViewer.settingsName,String.valueOf(BytecodeViewer.viewer.sugarboxing.isSelected()),false);
    DiskWriter.writeNewLine(BytecodeViewer.settingsName,String.valueOf(BytecodeViewer.viewer.showversion.isSelected()),false);
    DiskWriter.writeNewLine(BytecodeViewer.settingsName,String.valueOf(BytecodeViewer.viewer.decodefinally.isSelected()),false);
    DiskWriter.writeNewLine(BytecodeViewer.settingsName,String.valueOf(BytecodeViewer.viewer.tidymonitors.isSelected()),false);
    DiskWriter.writeNewLine(BytecodeViewer.settingsName,String.valueOf(BytecodeViewer.viewer.lenient.isSelected()),false);
    DiskWriter.writeNewLine(BytecodeViewer.settingsName,String.valueOf(BytecodeViewer.viewer.dumpclasspath.isSelected()),false);
    DiskWriter.writeNewLine(BytecodeViewer.settingsName,String.valueOf(BytecodeViewer.viewer.comments.isSelected()),false);
    DiskWriter.writeNewLine(BytecodeViewer.settingsName,String.valueOf(BytecodeViewer.viewer.forcetopsort.isSelected()),false);
    DiskWriter.writeNewLine(BytecodeViewer.settingsName,String.valueOf(BytecodeViewer.viewer.forcetopsortaggress.isSelected()),false);
    DiskWriter.writeNewLine(BytecodeViewer.settingsName,String.valueOf(BytecodeViewer.viewer.stringbuffer.isSelected()),false);
    DiskWriter.writeNewLine(BytecodeViewer.settingsName,String.valueOf(BytecodeViewer.viewer.stringbuilder.isSelected()),false);
    DiskWriter.writeNewLine(BytecodeViewer.settingsName,String.valueOf(BytecodeViewer.viewer.silent.isSelected()),false);
    DiskWriter.writeNewLine(BytecodeViewer.settingsName,String.valueOf(BytecodeViewer.viewer.recover.isSelected()),false);
    DiskWriter.writeNewLine(BytecodeViewer.settingsName,String.valueOf(BytecodeViewer.viewer.eclipse.isSelected()),false);
    DiskWriter.writeNewLine(BytecodeViewer.settingsName,String.valueOf(BytecodeViewer.viewer.override.isSelected()),false);
    DiskWriter.writeNewLine(BytecodeViewer.settingsName,String.valueOf(BytecodeViewer.viewer.showinferrable.isSelected()),false);
    DiskWriter.writeNewLine(BytecodeViewer.settingsName,String.valueOf(BytecodeViewer.viewer.aexagg.isSelected()),false);
    DiskWriter.writeNewLine(BytecodeViewer.settingsName,String.valueOf(BytecodeViewer.viewer.forcecondpropagate.isSelected()),false);
    DiskWriter.writeNewLine(BytecodeViewer.settingsName,String.valueOf(BytecodeViewer.viewer.hideutf.isSelected()),false);
    DiskWriter.writeNewLine(BytecodeViewer.settingsName,String.valueOf(BytecodeViewer.viewer.hidelongstrings.isSelected()),false);
    DiskWriter.writeNewLine(BytecodeViewer.settingsName,String.valueOf(BytecodeViewer.viewer.commentmonitor.isSelected()),false);
    DiskWriter.writeNewLine(BytecodeViewer.settingsName,String.valueOf(BytecodeViewer.viewer.allowcorrecting.isSelected()),false);
    DiskWriter.writeNewLine(BytecodeViewer.settingsName,String.valueOf(BytecodeViewer.viewer.labelledblocks.isSelected()),false);
    DiskWriter.writeNewLine(BytecodeViewer.settingsName,String.valueOf(BytecodeViewer.viewer.j14classobj.isSelected()),false);
    DiskWriter.writeNewLine(BytecodeViewer.settingsName,String.valueOf(BytecodeViewer.viewer.hidelangimports.isSelected()),false);
    DiskWriter.writeNewLine(BytecodeViewer.settingsName,String.valueOf(BytecodeViewer.viewer.recoverytypeclash.isSelected()),false);
    DiskWriter.writeNewLine(BytecodeViewer.settingsName,String.valueOf(BytecodeViewer.viewer.recoverytypehints.isSelected()),false);
    DiskWriter.writeNewLine(BytecodeViewer.settingsName,String.valueOf(BytecodeViewer.viewer.forceturningifs.isSelected()),false);
    DiskWriter.writeNewLine(BytecodeViewer.settingsName,String.valueOf(BytecodeViewer.viewer.forloopaggcapture.isSelected()),false);
    DiskWriter.writeNewLine(BytecodeViewer.settingsName,String.valueOf(BytecodeViewer.viewer.forceexceptionprune.isSelected()),false);
    DiskWriter.writeNewLine(BytecodeViewer.settingsName,String.valueOf(BytecodeViewer.viewer.chckbxmntmShowDebugLine.isSelected()),false);
    DiskWriter.writeNewLine(BytecodeViewer.settingsName,String.valueOf(BytecodeViewer.viewer.chckbxmntmSimplifyMemberReferences.isSelected()),false);
    DiskWriter.writeNewLine(BytecodeViewer.settingsName,String.valueOf(BytecodeViewer.viewer.mnMergeVariables.isSelected()),false);
    DiskWriter.writeNewLine(BytecodeViewer.settingsName,String.valueOf(BytecodeViewer.viewer.chckbxmntmNewCheckItem_1.isSelected()),false);
    DiskWriter.writeNewLine(BytecodeViewer.settingsName,String.valueOf(BytecodeViewer.viewer.chckbxmntmNewCheckItem_2.isSelected()),false);
    DiskWriter.writeNewLine(BytecodeViewer.settingsName,String.valueOf(BytecodeViewer.viewer.chckbxmntmNewCheckItem_3.isSelected()),false);
    DiskWriter.writeNewLine(BytecodeViewer.settingsName,String.valueOf(BytecodeViewer.viewer.chckbxmntmNewCheckItem_4.isSelected()),false);
    DiskWriter.writeNewLine(BytecodeViewer.settingsName,String.valueOf(BytecodeViewer.viewer.chckbxmntmNewCheckItem_5.isSelected()),false);
    DiskWriter.writeNewLine(BytecodeViewer.settingsName,String.valueOf(BytecodeViewer.viewer.chckbxmntmNewCheckItem_6.isSelected()),false);
    DiskWriter.writeNewLine(BytecodeViewer.settingsName,String.valueOf(BytecodeViewer.viewer.chckbxmntmNewCheckItem_7.isSelected()),false);
    DiskWriter.writeNewLine(BytecodeViewer.settingsName,String.valueOf(BytecodeViewer.viewer.chckbxmntmNewCheckItem_8.isSelected()),false);
    DiskWriter.writeNewLine(BytecodeViewer.settingsName,String.valueOf(BytecodeViewer.viewer.chckbxmntmNewCheckItem_9.isSelected()),false);
    DiskWriter.writeNewLine(BytecodeViewer.settingsName,String.valueOf(BytecodeViewer.viewer.chckbxmntmNewCheckItem_10.isSelected()),false);
    DiskWriter.writeNewLine(BytecodeViewer.settingsName,String.valueOf(BytecodeViewer.viewer.chckbxmntmNewCheckItem_11.isSelected()),false);
    DiskWriter.writeNewLine(BytecodeViewer.settingsName,String.valueOf(BytecodeViewer.viewer.chckbxmntmAppendBrackets.isSelected()),false);
    DiskWriter.writeNewLine(BytecodeViewer.settingsName,String.valueOf(BytecodeViewer.viewer.debugHelpers.isSelected()),false);
    DiskWriter.writeNewLine(BytecodeViewer.settingsName,"deprecated",false);
    DiskWriter.writeNewLine(BytecodeViewer.settingsName,String.valueOf(BytecodeViewer.viewer.chckbxmntmNewCheckItem_12.isSelected()),false);
    if (BytecodeViewer.viewer.panelGroup1.isSelected(BytecodeViewer.viewer.panel1None.getModel()))     DiskWriter.writeNewLine(BytecodeViewer.settingsName,"0",false);
 else     if (BytecodeViewer.viewer.panelGroup1.isSelected(BytecodeViewer.viewer.panel1Proc.getModel()))     DiskWriter.writeNewLine(BytecodeViewer.settingsName,"1",false);
 else     if (BytecodeViewer.viewer.panelGroup1.isSelected(BytecodeViewer.viewer.panel1CFR.getModel()))     DiskWriter.writeNewLine(BytecodeViewer.settingsName,"2",false);
 else     if (BytecodeViewer.viewer.panelGroup1.isSelected(BytecodeViewer.viewer.panel1Fern.getModel()))     DiskWriter.writeNewLine(BytecodeViewer.settingsName,"3",false);
 else     if (BytecodeViewer.viewer.panelGroup1.isSelected(BytecodeViewer.viewer.panel1Bytecode.getModel()))     DiskWriter.writeNewLine(BytecodeViewer.settingsName,"4",false);
 else     if (BytecodeViewer.viewer.panelGroup1.isSelected(BytecodeViewer.viewer.panel1Hexcode.getModel()))     DiskWriter.writeNewLine(BytecodeViewer.settingsName,"5",false);
 else     if (BytecodeViewer.viewer.panelGroup1.isSelected(BytecodeViewer.viewer.panel1Smali.getModel()))     DiskWriter.writeNewLine(BytecodeViewer.settingsName,"6",false);
 else     if (BytecodeViewer.viewer.panelGroup1.isSelected(BytecodeViewer.viewer.panel1Krakatau.getModel()))     DiskWriter.writeNewLine(BytecodeViewer.settingsName,"7",false);
 else     if (BytecodeViewer.viewer.panelGroup1.isSelected(BytecodeViewer.viewer.panel1KrakatauBytecode.getModel()))     DiskWriter.writeNewLine(BytecodeViewer.settingsName,"8",false);
    if (BytecodeViewer.viewer.panelGroup2.isSelected(BytecodeViewer.viewer.panel2None.getModel()))     DiskWriter.writeNewLine(BytecodeViewer.settingsName,"0",false);
 else     if (BytecodeViewer.viewer.panelGroup2.isSelected(BytecodeViewer.viewer.panel2Proc.getModel()))     DiskWriter.writeNewLine(BytecodeViewer.settingsName,"1",false);
 else     if (BytecodeViewer.viewer.panelGroup2.isSelected(BytecodeViewer.viewer.panel2CFR.getModel()))     DiskWriter.writeNewLine(BytecodeViewer.settingsName,"2",false);
 else     if (BytecodeViewer.viewer.panelGroup2.isSelected(BytecodeViewer.viewer.panel2Fern.getModel()))     DiskWriter.writeNewLine(BytecodeViewer.settingsName,"3",false);
 else     if (BytecodeViewer.viewer.panelGroup2.isSelected(BytecodeViewer.viewer.panel2Bytecode.getModel()))     DiskWriter.writeNewLine(BytecodeViewer.settingsName,"4",false);
 else     if (BytecodeViewer.viewer.panelGroup2.isSelected(BytecodeViewer.viewer.panel2Hexcode.getModel()))     DiskWriter.writeNewLine(BytecodeViewer.settingsName,"5",false);
 else     if (BytecodeViewer.viewer.panelGroup2.isSelected(BytecodeViewer.viewer.panel2Smali.getModel()))     DiskWriter.writeNewLine(BytecodeViewer.settingsName,"6",false);
 else     if (BytecodeViewer.viewer.panelGroup2.isSelected(BytecodeViewer.viewer.panel2Krakatau.getModel()))     DiskWriter.writeNewLine(BytecodeViewer.settingsName,"7",false);
 else     if (BytecodeViewer.viewer.panelGroup2.isSelected(BytecodeViewer.viewer.panel2KrakatauBytecode.getModel()))     DiskWriter.writeNewLine(BytecodeViewer.settingsName,"8",false);
    if (BytecodeViewer.viewer.panelGroup3.isSelected(BytecodeViewer.viewer.panel3None.getModel()))     DiskWriter.writeNewLine(BytecodeViewer.settingsName,"0",false);
 else     if (BytecodeViewer.viewer.panelGroup3.isSelected(BytecodeViewer.viewer.panel3Proc.getModel()))     DiskWriter.writeNewLine(BytecodeViewer.settingsName,"1",false);
 else     if (BytecodeViewer.viewer.panelGroup3.isSelected(BytecodeViewer.viewer.panel3CFR.getModel()))     DiskWriter.writeNewLine(BytecodeViewer.settingsName,"2",false);
 else     if (BytecodeViewer.viewer.panelGroup3.isSelected(BytecodeViewer.viewer.panel3Fern.getModel()))     DiskWriter.writeNewLine(BytecodeViewer.settingsName,"3",false);
 else     if (BytecodeViewer.viewer.panelGroup3.isSelected(BytecodeViewer.viewer.panel3Bytecode.getModel()))     DiskWriter.writeNewLine(BytecodeViewer.settingsName,"4",false);
 else     if (BytecodeViewer.viewer.panelGroup3.isSelected(BytecodeViewer.viewer.panel3Hexcode.getModel()))     DiskWriter.writeNewLine(BytecodeViewer.settingsName,"5",false);
 else     if (BytecodeViewer.viewer.panelGroup3.isSelected(BytecodeViewer.viewer.panel3Smali.getModel()))     DiskWriter.writeNewLine(BytecodeViewer.settingsName,"6",false);
 else     if (BytecodeViewer.viewer.panelGroup3.isSelected(BytecodeViewer.viewer.panel3Krakatau.getModel()))     DiskWriter.writeNewLine(BytecodeViewer.settingsName,"7",false);
 else     if (BytecodeViewer.viewer.panelGroup3.isSelected(BytecodeViewer.viewer.panel3KrakatauBytecode.getModel()))     DiskWriter.writeNewLine(BytecodeViewer.settingsName,"8",false);
    DiskWriter.writeNewLine(BytecodeViewer.settingsName,String.valueOf(BytecodeViewer.viewer.refreshOnChange.isSelected()),false);
    DiskWriter.writeNewLine(BytecodeViewer.settingsName,String.valueOf(BytecodeViewer.viewer.isMaximized),false);
    DiskWriter.writeNewLine(BytecodeViewer.settingsName,String.valueOf(BytecodeViewer.viewer.autoCompileSmali.isSelected()),false);
    DiskWriter.writeNewLine(BytecodeViewer.settingsName,String.valueOf(BytecodeViewer.viewer.autoCompileOnRefresh.isSelected()),false);
    DiskWriter.writeNewLine(BytecodeViewer.settingsName,BytecodeViewer.lastDirectory,false);
    DiskWriter.writeNewLine(BytecodeViewer.settingsName,BytecodeViewer.python,false);
    DiskWriter.writeNewLine(BytecodeViewer.settingsName,BytecodeViewer.rt,false);
    DiskWriter.writeNewLine(BytecodeViewer.settingsName,String.valueOf(BytecodeViewer.viewer.panel1Proc_E.isSelected()),false);
    DiskWriter.writeNewLine(BytecodeViewer.settingsName,String.valueOf(BytecodeViewer.viewer.panel1CFR_E.isSelected()),false);
    DiskWriter.writeNewLine(BytecodeViewer.settingsName,String.valueOf(BytecodeViewer.viewer.panel1Fern_E.isSelected()),false);
    DiskWriter.writeNewLine(BytecodeViewer.settingsName,String.valueOf(BytecodeViewer.viewer.panel1Krakatau_E.isSelected()),false);
    DiskWriter.writeNewLine(BytecodeViewer.settingsName,String.valueOf(BytecodeViewer.viewer.panel1Smali_E.isSelected()),false);
    DiskWriter.writeNewLine(BytecodeViewer.settingsName,String.valueOf(BytecodeViewer.viewer.panel2Proc_E.isSelected()),false);
    DiskWriter.writeNewLine(BytecodeViewer.settingsName,String.valueOf(BytecodeViewer.viewer.panel2CFR_E.isSelected()),false);
    DiskWriter.writeNewLine(BytecodeViewer.settingsName,String.valueOf(BytecodeViewer.viewer.panel2Fern_E.isSelected()),false);
    DiskWriter.writeNewLine(BytecodeViewer.settingsName,String.valueOf(BytecodeViewer.viewer.panel2Krakatau_E.isSelected()),false);
    DiskWriter.writeNewLine(BytecodeViewer.settingsName,String.valueOf(BytecodeViewer.viewer.panel2Smali_E.isSelected()),false);
    DiskWriter.writeNewLine(BytecodeViewer.settingsName,String.valueOf(BytecodeViewer.viewer.panel3Proc_E.isSelected()),false);
    DiskWriter.writeNewLine(BytecodeViewer.settingsName,String.valueOf(BytecodeViewer.viewer.panel3CFR_E.isSelected()),false);
    DiskWriter.writeNewLine(BytecodeViewer.settingsName,String.valueOf(BytecodeViewer.viewer.panel3Fern_E.isSelected()),false);
    DiskWriter.writeNewLine(BytecodeViewer.settingsName,String.valueOf(BytecodeViewer.viewer.panel3Krakatau_E.isSelected()),false);
    DiskWriter.writeNewLine(BytecodeViewer.settingsName,String.valueOf(BytecodeViewer.viewer.panel3Smali_E.isSelected()),false);
    DiskWriter.writeNewLine(BytecodeViewer.settingsName,String.valueOf(BytecodeViewer.viewer.decodeAPKResources.isSelected()),false);
    DiskWriter.writeNewLine(BytecodeViewer.settingsName,BytecodeViewer.library,false);
  }
 catch (  Exception e) {
    new the.bytecode.club.bytecodeviewer.api.ExceptionUI(e);
  }
}
