{
{
    Resource classFileResource=this.classFileCacheResourceFinder.findResource(ClassFile.getClassFileResourceName(className));
    if (classFileResource != null) {
      Resource sourceResource=this.sourceFinder.findResource(ClassFile.getSourceResourceName(className));
      if (sourceResource == null)       return null;
      if (sourceResource.lastModified() < classFileResource.lastModified()) {
        byte[] bytecode;
        try {
          bytecode=CachingJavaSourceClassLoader.readResource(classFileResource);
        }
 catch (        IOException ex) {
          throw new ClassNotFoundException("Reading class file from \"" + classFileResource + "\"",ex);
        }
        Map<String,byte[]> m=new HashMap();
        m.put(className,bytecode);
        return m;
      }
    }
  }
  Map<String,byte[]> bytecodes=super.generateBytecodes(className);
  if (bytecodes == null)   return null;
  for (  Map.Entry<String,byte[]> me : bytecodes.entrySet()) {
    String className2=(String)me.getKey();
    byte[] bytecode=(byte[])me.getValue();
    try {
      CachingJavaSourceClassLoader.writeResource(this.classFileCacheResourceCreator,ClassFile.getClassFileResourceName(className2),bytecode);
    }
 catch (    IOException ex) {
      throw new ClassNotFoundException("Writing class file to \"" + ClassFile.getClassFileResourceName(className2) + "\"",ex);
    }
  }
  return bytecodes;
}
