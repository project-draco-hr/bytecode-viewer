{
  this(new PathResourceFinder(optionalSourcePath == null ? classPath : optionalSourcePath),IClassLoader.createJavacLikePathIClassLoader(optionalBootClassPath,optionalExtDirs,classPath),(rebuild ? ResourceFinder.EMPTY_RESOURCE_FINDER : destinationDirectory == Compiler.NO_DESTINATION_DIRECTORY ? Compiler.FIND_NEXT_TO_SOURCE_FILE : new DirectoryResourceFinder(destinationDirectory)),(destinationDirectory == Compiler.NO_DESTINATION_DIRECTORY ? Compiler.CREATE_NEXT_TO_SOURCE_FILE : new DirectoryResourceCreator(destinationDirectory)),optionalCharacterEncoding,verbose,debugSource,debugLines,debugVars,new FilterWarningHandler(warningHandlePatterns,new SimpleWarningHandler()));
  this.benchmark.report("*** JANINO - an embedded compiler for the Java(TM) programming language");
  this.benchmark.report("*** For more information visit http://janino.codehaus.org");
  this.benchmark.report("Source path",optionalSourcePath);
  this.benchmark.report("Class path",classPath);
  this.benchmark.report("Ext dirs",optionalExtDirs);
  this.benchmark.report("Boot class path",optionalBootClassPath);
  this.benchmark.report("Destination directory",destinationDirectory);
  this.benchmark.report("Character encoding",optionalCharacterEncoding);
  this.benchmark.report("Verbose",new Boolean(verbose));
  this.benchmark.report("Debug source",new Boolean(debugSource));
  this.benchmark.report("Debug lines",new Boolean(debugSource));
  this.benchmark.report("Debug vars",new Boolean(debugSource));
  this.benchmark.report("Warning handle patterns",warningHandlePatterns);
  this.benchmark.report("Rebuild",new Boolean(rebuild));
}
