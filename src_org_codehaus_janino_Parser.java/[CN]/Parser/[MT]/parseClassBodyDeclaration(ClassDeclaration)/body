{
  if (this.peekRead(";"))   return;
  String optionalDocComment=this.scanner.doc();
  Modifiers modifiers=this.parseModifiers();
  if (this.peek("{")) {
    if ((modifiers.flags & ~Mod.STATIC) != 0) {
      throw this.compileException("Only modifier \"static\" allowed on initializer");
    }
    Initializer initializer=new Initializer(this.location(),Mod.isStatic(modifiers.flags),this.parseBlock());
    classDeclaration.addInitializer(initializer);
    return;
  }
  if (this.peekRead("void")) {
    Location location=this.location();
    if (optionalDocComment == null)     this.warning("MDCM","Method doc comment missing",location);
    String name=this.readIdentifier();
    classDeclaration.addDeclaredMethod(this.parseMethodDeclarationRest(optionalDocComment,modifiers,new BasicType(location,BasicType.VOID),name));
    return;
  }
  if (this.peekRead("class")) {
    if (optionalDocComment == null)     this.warning("MCDCM","Member class doc comment missing",this.location());
    classDeclaration.addMemberTypeDeclaration((MemberTypeDeclaration)this.parseClassDeclarationRest(optionalDocComment,modifiers,ClassDeclarationContext.TYPE_DECLARATION));
    return;
  }
  if (this.peekRead("interface")) {
    if (optionalDocComment == null) {
      this.warning("MIDCM","Member interface doc comment missing",this.location());
    }
    classDeclaration.addMemberTypeDeclaration((MemberTypeDeclaration)this.parseInterfaceDeclarationRest(optionalDocComment,modifiers.add(Mod.STATIC),InterfaceDeclarationContext.NAMED_TYPE_DECLARATION));
    return;
  }
  if (classDeclaration instanceof NamedClassDeclaration && this.peek().value.equals(((NamedClassDeclaration)classDeclaration).getName()) && this.peekNextButOne("(")) {
    if (optionalDocComment == null)     this.warning("CDCM","Constructor doc comment missing",this.location());
    classDeclaration.addConstructor(this.parseConstructorDeclarator(optionalDocComment,modifiers));
    return;
  }
  Type memberType=this.parseType();
  Location location=this.location();
  String memberName=this.readIdentifier();
  if (this.peek("(")) {
    if (optionalDocComment == null)     this.warning("MDCM","Method doc comment missing",this.location());
    classDeclaration.addDeclaredMethod(this.parseMethodDeclarationRest(optionalDocComment,modifiers,memberType,memberName));
    return;
  }
  if (optionalDocComment == null)   this.warning("FDCM","Field doc comment missing",this.location());
  FieldDeclaration fd=new FieldDeclaration(location,optionalDocComment,modifiers,memberType,this.parseFieldDeclarationRest(memberName));
  this.read(";");
  classDeclaration.addFieldDeclaration(fd);
}
