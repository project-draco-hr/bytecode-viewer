{
  this.read("{");
  while (!this.peekRead("}")) {
    if (this.peekRead(";"))     continue;
    String optionalDocComment=this.scanner.doc();
    Modifiers modifiers=this.parseModifiers();
    if (this.peekRead("void")) {
      if (optionalDocComment == null)       this.warning("MDCM","Method doc comment missing",this.location());
      Location location=this.location();
      String name=this.readIdentifier();
      interfaceDeclaration.addDeclaredMethod(this.parseMethodDeclarationRest(optionalDocComment,modifiers.add(Mod.ABSTRACT | Mod.PUBLIC),new BasicType(location,BasicType.VOID),name));
    }
 else     if (this.peekRead("class")) {
      if (optionalDocComment == null) {
        this.warning("MCDCM","Member class doc comment missing",this.location());
      }
      interfaceDeclaration.addMemberTypeDeclaration((MemberTypeDeclaration)this.parseClassDeclarationRest(optionalDocComment,modifiers.add(Mod.STATIC | Mod.PUBLIC),ClassDeclarationContext.TYPE_DECLARATION));
    }
 else     if (this.peekRead("interface")) {
      if (optionalDocComment == null) {
        this.warning("MIDCM","Member interface doc comment missing",this.location());
      }
      interfaceDeclaration.addMemberTypeDeclaration((MemberTypeDeclaration)this.parseInterfaceDeclarationRest(optionalDocComment,modifiers.add(Mod.STATIC | Mod.PUBLIC),InterfaceDeclarationContext.NAMED_TYPE_DECLARATION));
    }
 else {
      this.parseTypeArgumentsOpt();
      Type memberType=this.parseType();
      String memberName=this.readIdentifier();
      Location location=this.location();
      if (this.peek("(")) {
        if (optionalDocComment == null)         this.warning("MDCM","Method doc comment missing",this.location());
        interfaceDeclaration.addDeclaredMethod(this.parseMethodDeclarationRest(optionalDocComment,modifiers.add(Mod.ABSTRACT | Mod.PUBLIC),memberType,memberName));
      }
 else {
        if (optionalDocComment == null)         this.warning("FDCM","Field doc comment missing",this.location());
        FieldDeclaration fd=new FieldDeclaration(location,optionalDocComment,modifiers.add(Mod.PUBLIC | Mod.STATIC | Mod.FINAL),memberType,this.parseFieldDeclarationRest(memberName));
        interfaceDeclaration.addConstantDeclaration(fd);
      }
    }
  }
}
