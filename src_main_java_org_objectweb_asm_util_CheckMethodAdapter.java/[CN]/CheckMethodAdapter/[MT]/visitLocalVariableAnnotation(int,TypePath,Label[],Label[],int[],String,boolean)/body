{
  checkStartCode();
  checkEndCode();
  int sort=typeRef >>> 24;
  if (sort != TypeReference.LOCAL_VARIABLE && sort != TypeReference.RESOURCE_VARIABLE) {
    throw new IllegalArgumentException("Invalid type reference sort 0x" + Integer.toHexString(sort));
  }
  CheckClassAdapter.checkTypeRefAndPath(typeRef,typePath);
  checkDesc(desc,false);
  if (start == null || end == null || index == null || end.length != start.length || index.length != start.length) {
    throw new IllegalArgumentException("Invalid start, end and index arrays (must be non null and of identical length");
  }
  for (int i=0; i < start.length; ++i) {
    checkLabel(start[i],true,"start label");
    checkLabel(end[i],true,"end label");
    checkUnsignedShort(index[i],"Invalid variable index");
    int s=labels.get(start[i]).intValue();
    int e=labels.get(end[i]).intValue();
    if (e < s) {
      throw new IllegalArgumentException("Invalid start and end labels (end must be greater than start)");
    }
  }
  return super.visitLocalVariableAnnotation(typeRef,typePath,start,end,index,desc,visible);
}
