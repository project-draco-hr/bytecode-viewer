{
  String fileStart=BytecodeViewer.tempDirectory + BytecodeViewer.fs;
  final File tempClass=new File(MiscUtils.getUniqueName(fileStart,".class") + ".class");
  try {
    final FileOutputStream fos=new FileOutputStream(tempClass);
    fos.write(b);
    fos.close();
  }
 catch (  final IOException e) {
    new the.bytecode.club.bytecodeviewer.api.ExceptionUI(e);
  }
  String fuckery=fuckery(fileStart);
  if (!BytecodeViewer.fatJar) {
    try {
      ProcessBuilder pb=new ProcessBuilder(ArrayUtils.addAll(new String[]{BytecodeViewer.getJavaCommand(),"-jar",Resources.findLibrary("cfr")},generateMainMethod(tempClass.getAbsolutePath(),fuckery)));
      BytecodeViewer.sm.stopBlocking();
      Process p=pb.start();
      BytecodeViewer.createdProcesses.add(p);
      p.waitFor();
    }
 catch (    Exception e) {
      new the.bytecode.club.bytecodeviewer.api.ExceptionUI(e);
    }
 finally {
      BytecodeViewer.sm.setBlocking();
    }
  }
 else {
    org.benf.cfr.reader.Main.main(generateMainMethod(tempClass.getAbsolutePath(),fuckery));
  }
  tempClass.delete();
  return findFile(new File(fuckery).listFiles());
}
