{
  for (  File f : files)   BytecodeViewer.addRecentFile(f);
  BytecodeViewer.viewer.setC(true);
  BytecodeViewer.viewer.setIcon(true);
  boolean update=true;
  for (  final File f : files) {
    final String fn=f.getName();
    if (fn.endsWith(".jar")) {
      try {
        JarUtils.put(f,BytecodeViewer.loadedClasses);
      }
 catch (      final Exception e) {
        new the.bytecode.club.bytecodeviewer.api.ExceptionUI(e);
      }
    }
 else     if (fn.endsWith(".class")) {
      try {
        byte[] bytes=JarUtils.getBytes(new FileInputStream(f));
        String cafebabe=String.format("%02X",bytes[0]) + String.format("%02X",bytes[1]) + String.format("%02X",bytes[2])+ String.format("%02X",bytes[3]);
        if (cafebabe.toLowerCase().equals("cafebabe")) {
          final ClassNode cn=JarUtils.getNode(bytes);
          BytecodeViewer.loadedClasses.put(cn.name,cn);
        }
 else {
          showMessage(fn + ": Header does not start with CAFEBABE, ignoring.");
          update=false;
        }
      }
 catch (      java.io.FileNotFoundException e) {
        showMessage("The file " + f.getAbsolutePath() + " could not be found.");
        update=false;
      }
catch (      final Exception e) {
        new the.bytecode.club.bytecodeviewer.api.ExceptionUI(e);
      }
    }
  }
  BytecodeViewer.viewer.setC(false);
  BytecodeViewer.viewer.setIcon(false);
  if (update)   MainViewerGUI.getComponent(FileNavigationPane.class).updateTree();
}
