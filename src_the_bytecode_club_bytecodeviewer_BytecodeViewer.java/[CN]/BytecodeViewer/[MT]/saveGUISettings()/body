{
  try {
    DiskWriter.replaceFile(settingsName,"",false);
    DiskWriter.writeNewLine(settingsName,String.valueOf(viewer.rbr.isSelected()),false);
    DiskWriter.writeNewLine(settingsName,String.valueOf(viewer.rsy.isSelected()),false);
    DiskWriter.writeNewLine(settingsName,String.valueOf(viewer.din.isSelected()),false);
    DiskWriter.writeNewLine(settingsName,String.valueOf(viewer.dc4.isSelected()),false);
    DiskWriter.writeNewLine(settingsName,String.valueOf(viewer.das.isSelected()),false);
    DiskWriter.writeNewLine(settingsName,String.valueOf(viewer.hes.isSelected()),false);
    DiskWriter.writeNewLine(settingsName,String.valueOf(viewer.hdc.isSelected()),false);
    DiskWriter.writeNewLine(settingsName,String.valueOf(viewer.dgs.isSelected()),false);
    DiskWriter.writeNewLine(settingsName,String.valueOf(viewer.ner.isSelected()),false);
    DiskWriter.writeNewLine(settingsName,String.valueOf(viewer.den.isSelected()),false);
    DiskWriter.writeNewLine(settingsName,String.valueOf(viewer.rgn.isSelected()),false);
    DiskWriter.writeNewLine(settingsName,String.valueOf(viewer.bto.isSelected()),false);
    DiskWriter.writeNewLine(settingsName,String.valueOf(viewer.nns.isSelected()),false);
    DiskWriter.writeNewLine(settingsName,String.valueOf(viewer.uto.isSelected()),false);
    DiskWriter.writeNewLine(settingsName,String.valueOf(viewer.udv.isSelected()),false);
    DiskWriter.writeNewLine(settingsName,String.valueOf(viewer.rer.isSelected()),false);
    DiskWriter.writeNewLine(settingsName,String.valueOf(viewer.fdi.isSelected()),false);
    DiskWriter.writeNewLine(settingsName,String.valueOf(viewer.asc.isSelected()),false);
    DiskWriter.writeNewLine(settingsName,String.valueOf(viewer.decodeenumswitch.isSelected()),false);
    DiskWriter.writeNewLine(settingsName,String.valueOf(viewer.sugarenums.isSelected()),false);
    DiskWriter.writeNewLine(settingsName,String.valueOf(viewer.decodestringswitch.isSelected()),false);
    DiskWriter.writeNewLine(settingsName,String.valueOf(viewer.arrayiter.isSelected()),false);
    DiskWriter.writeNewLine(settingsName,String.valueOf(viewer.collectioniter.isSelected()),false);
    DiskWriter.writeNewLine(settingsName,String.valueOf(viewer.innerclasses.isSelected()),false);
    DiskWriter.writeNewLine(settingsName,String.valueOf(viewer.removeboilerplate.isSelected()),false);
    DiskWriter.writeNewLine(settingsName,String.valueOf(viewer.removeinnerclasssynthetics.isSelected()),false);
    DiskWriter.writeNewLine(settingsName,String.valueOf(viewer.decodelambdas.isSelected()),false);
    DiskWriter.writeNewLine(settingsName,String.valueOf(viewer.hidebridgemethods.isSelected()),false);
    DiskWriter.writeNewLine(settingsName,String.valueOf(viewer.liftconstructorinit.isSelected()),false);
    DiskWriter.writeNewLine(settingsName,String.valueOf(viewer.removedeadmethods.isSelected()),false);
    DiskWriter.writeNewLine(settingsName,String.valueOf(viewer.removebadgenerics.isSelected()),false);
    DiskWriter.writeNewLine(settingsName,String.valueOf(viewer.sugarasserts.isSelected()),false);
    DiskWriter.writeNewLine(settingsName,String.valueOf(viewer.sugarboxing.isSelected()),false);
    DiskWriter.writeNewLine(settingsName,String.valueOf(viewer.showversion.isSelected()),false);
    DiskWriter.writeNewLine(settingsName,String.valueOf(viewer.decodefinally.isSelected()),false);
    DiskWriter.writeNewLine(settingsName,String.valueOf(viewer.tidymonitors.isSelected()),false);
    DiskWriter.writeNewLine(settingsName,String.valueOf(viewer.lenient.isSelected()),false);
    DiskWriter.writeNewLine(settingsName,String.valueOf(viewer.dumpclasspath.isSelected()),false);
    DiskWriter.writeNewLine(settingsName,String.valueOf(viewer.comments.isSelected()),false);
    DiskWriter.writeNewLine(settingsName,String.valueOf(viewer.forcetopsort.isSelected()),false);
    DiskWriter.writeNewLine(settingsName,String.valueOf(viewer.forcetopsortaggress.isSelected()),false);
    DiskWriter.writeNewLine(settingsName,String.valueOf(viewer.stringbuffer.isSelected()),false);
    DiskWriter.writeNewLine(settingsName,String.valueOf(viewer.stringbuilder.isSelected()),false);
    DiskWriter.writeNewLine(settingsName,String.valueOf(viewer.silent.isSelected()),false);
    DiskWriter.writeNewLine(settingsName,String.valueOf(viewer.recover.isSelected()),false);
    DiskWriter.writeNewLine(settingsName,String.valueOf(viewer.eclipse.isSelected()),false);
    DiskWriter.writeNewLine(settingsName,String.valueOf(viewer.override.isSelected()),false);
    DiskWriter.writeNewLine(settingsName,String.valueOf(viewer.showinferrable.isSelected()),false);
    DiskWriter.writeNewLine(settingsName,String.valueOf(viewer.aexagg.isSelected()),false);
    DiskWriter.writeNewLine(settingsName,String.valueOf(viewer.forcecondpropagate.isSelected()),false);
    DiskWriter.writeNewLine(settingsName,String.valueOf(viewer.hideutf.isSelected()),false);
    DiskWriter.writeNewLine(settingsName,String.valueOf(viewer.hidelongstrings.isSelected()),false);
    DiskWriter.writeNewLine(settingsName,String.valueOf(viewer.commentmonitor.isSelected()),false);
    DiskWriter.writeNewLine(settingsName,String.valueOf(viewer.allowcorrecting.isSelected()),false);
    DiskWriter.writeNewLine(settingsName,String.valueOf(viewer.labelledblocks.isSelected()),false);
    DiskWriter.writeNewLine(settingsName,String.valueOf(viewer.j14classobj.isSelected()),false);
    DiskWriter.writeNewLine(settingsName,String.valueOf(viewer.hidelangimports.isSelected()),false);
    DiskWriter.writeNewLine(settingsName,String.valueOf(viewer.recoverytypeclash.isSelected()),false);
    DiskWriter.writeNewLine(settingsName,String.valueOf(viewer.recoverytypehints.isSelected()),false);
    DiskWriter.writeNewLine(settingsName,String.valueOf(viewer.forceturningifs.isSelected()),false);
    DiskWriter.writeNewLine(settingsName,String.valueOf(viewer.forloopaggcapture.isSelected()),false);
    DiskWriter.writeNewLine(settingsName,String.valueOf(viewer.forceexceptionprune.isSelected()),false);
    DiskWriter.writeNewLine(settingsName,String.valueOf(viewer.chckbxmntmShowDebugLine.isSelected()),false);
    DiskWriter.writeNewLine(settingsName,String.valueOf(viewer.chckbxmntmSimplifyMemberReferences.isSelected()),false);
    DiskWriter.writeNewLine(settingsName,String.valueOf(viewer.mnMergeVariables.isSelected()),false);
    DiskWriter.writeNewLine(settingsName,String.valueOf(viewer.chckbxmntmNewCheckItem_1.isSelected()),false);
    DiskWriter.writeNewLine(settingsName,String.valueOf(viewer.chckbxmntmNewCheckItem_2.isSelected()),false);
    DiskWriter.writeNewLine(settingsName,String.valueOf(viewer.chckbxmntmNewCheckItem_3.isSelected()),false);
    DiskWriter.writeNewLine(settingsName,String.valueOf(viewer.chckbxmntmNewCheckItem_4.isSelected()),false);
    DiskWriter.writeNewLine(settingsName,String.valueOf(viewer.chckbxmntmNewCheckItem_5.isSelected()),false);
    DiskWriter.writeNewLine(settingsName,String.valueOf(viewer.chckbxmntmNewCheckItem_6.isSelected()),false);
    DiskWriter.writeNewLine(settingsName,String.valueOf(viewer.chckbxmntmNewCheckItem_7.isSelected()),false);
    DiskWriter.writeNewLine(settingsName,String.valueOf(viewer.chckbxmntmNewCheckItem_8.isSelected()),false);
    DiskWriter.writeNewLine(settingsName,String.valueOf(viewer.chckbxmntmNewCheckItem_9.isSelected()),false);
    DiskWriter.writeNewLine(settingsName,String.valueOf(viewer.chckbxmntmNewCheckItem_10.isSelected()),false);
    DiskWriter.writeNewLine(settingsName,String.valueOf(viewer.chckbxmntmNewCheckItem_11.isSelected()),false);
    DiskWriter.writeNewLine(settingsName,String.valueOf(viewer.chckbxmntmAppendBrackets.isSelected()),false);
    DiskWriter.writeNewLine(settingsName,String.valueOf(viewer.sourcePane.isSelected()),false);
    DiskWriter.writeNewLine(settingsName,String.valueOf(viewer.bytecodePane.isSelected()),false);
    DiskWriter.writeNewLine(settingsName,String.valueOf(viewer.hexPane.isSelected()),false);
    if (viewer.decompilerGroup.isSelected(viewer.procyonDec.getModel()))     DiskWriter.writeNewLine(settingsName,"0",false);
 else     if (viewer.decompilerGroup.isSelected(viewer.cfrDec.getModel()))     DiskWriter.writeNewLine(settingsName,"1",false);
 else     if (viewer.decompilerGroup.isSelected(viewer.fernflowerDec.getModel()))     DiskWriter.writeNewLine(settingsName,"2",false);
    DiskWriter.writeNewLine(settingsName,String.valueOf(viewer.debugHelpers.isSelected()),false);
    DiskWriter.writeNewLine(settingsName,String.valueOf(viewer.chckbxmntmNewCheckItem.isSelected()),false);
    DiskWriter.writeNewLine(settingsName,String.valueOf(viewer.chckbxmntmNewCheckItem_12.isSelected()),false);
  }
 catch (  Exception e) {
    new the.bytecode.club.bytecodeviewer.gui.StackTraceUI(e);
  }
}
