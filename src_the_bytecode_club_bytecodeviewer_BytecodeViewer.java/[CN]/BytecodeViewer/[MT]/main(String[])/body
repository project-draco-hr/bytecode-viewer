{
  iconList=new ArrayList<BufferedImage>();
  int size=16;
  for (int i=0; i < 24; i++) {
    iconList.add(resize(icon,size,size));
    size+=2;
  }
  cleanup();
  Runtime.getRuntime().addShutdownHook(new Thread(){
    @Override public void run(){
      Settings.saveGUI();
      cleanup();
    }
  }
);
  try {
    UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
  }
 catch (  Exception e) {
    new the.bytecode.club.bytecodeviewer.api.ExceptionUI(e);
  }
  viewer=new MainViewerGUI();
  Settings.loadGUI();
  resetRecentFilesMenu();
  Thread versionChecker=new Thread(){
    @Override public void run(){
      try {
        HttpURLConnection connection=(HttpURLConnection)new URL("https://raw.githubusercontent.com/Konloch/bytecode-viewer/master/VERSION").openConnection();
        connection.setUseCaches(false);
        connection.setRequestProperty("User-Agent","Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:25.0) Gecko/20100101 Firefox/25.0");
        BufferedReader reader=new BufferedReader(new InputStreamReader(connection.getInputStream()));
        String version=reader.readLine();
        reader.close();
        if (!BytecodeViewer.version.equals(version)) {
          connection=(HttpURLConnection)new URL("https://raw.githubusercontent.com/Konloch/bytecode-viewer/master/README.txt").openConnection();
          connection.setUseCaches(false);
          connection.setRequestProperty("User-Agent","Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:25.0) Gecko/20100101 Firefox/25.0");
          reader=new BufferedReader(new InputStreamReader(connection.getInputStream()));
          ArrayList<String> readme=new ArrayList<String>();
          String s;
          while ((s=reader.readLine()) != null)           readme.add(s);
          reader.close();
          String changelog="";
          boolean trigger=false;
          for (          String st : readme) {
            if (st.equals("--- " + version + " ---:"))             trigger=true;
            if (trigger == true && !st.equals("--- " + version + " ---:")) {
              if (st.startsWith("--- "))               trigger=false;
 else               changelog+=st + nl;
            }
          }
          JOptionPane pane=new JOptionPane("Your version: " + BytecodeViewer.version + ", latest version: "+ version+ nl+ nl+ "Version "+ version+ "'s Change Log:"+ nl+ changelog+ nl+ "Would you like to automatically open the download page? (https://github.com/Konloch/bytecode-viewer/releases)");
          Object[] options=new String[]{"Yes","No"};
          pane.setOptions(options);
          JDialog dialog=pane.createDialog(BytecodeViewer.viewer,"Bytecode Viewer - Outdated Version");
          dialog.setVisible(true);
          Object obj=pane.getValue();
          int result=-1;
          for (int k=0; k < options.length; k++)           if (options[k].equals(obj))           result=k;
          if (result == 0) {
            if (Desktop.isDesktopSupported()) {
              Desktop.getDesktop().browse(new URI("https://github.com/Konloch/bytecode-viewer/releases"));
            }
 else {
              showMessage("Cannot open the page, please manually type it.");
            }
          }
        }
      }
 catch (      Exception e) {
        new the.bytecode.club.bytecodeviewer.api.ExceptionUI(e);
      }
    }
  }
;
  if (viewer.chckbxmntmNewCheckItem_12.isSelected())   versionChecker.start();
  if (args.length >= 1)   for (  String s : args) {
    openFiles(new File[]{new File(s)});
  }
  viewer.setVisible(true);
}
