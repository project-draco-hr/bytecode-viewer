{
  BytecodeViewer.args=args;
  System.out.println("https://the.bytecode.club - Created by @Konloch - Bytecode Viewer " + version);
  System.setSecurityManager(sm);
  try {
    UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
    Font font=UIManager.getFont("Tree.font");
    BufferedImage image=new BufferedImage(1,1,BufferedImage.TYPE_INT_RGB);
    Graphics g=image.getGraphics();
    int fontHeight=g.getFontMetrics(font).getHeight();
    int rowHeight=(int)UIManager.get("Tree.rowHeight");
    if (rowHeight < fontHeight) {
      UIManager.getDefaults().put("Tree.rowHeight",fontHeight);
    }
    if (previewCopy && !CommandLineInput.containsCommand(args))     showMessage("WARNING: This is a preview/dev copy, you WON'T be alerted when " + version + " is actually out if you use this."+ nl+ "Make sure to watch the repo: https://github.com/Konloch/bytecode-viewer for "+ version+ "'s release");
    viewer=new MainViewerGUI();
    Settings.loadGUI();
    int CLI=CommandLineInput.parseCommandLine(args);
    if (CLI == CommandLineInput.STOP)     return;
    if (!fatJar) {
      bootCheck.start();
      if (CLI == CommandLineInput.OPEN_FILE)       Boot.boot(args,false);
 else       Boot.boot(args,true);
    }
 else     InstallFatJar.start();
    if (CLI == CommandLineInput.OPEN_FILE)     BytecodeViewer.BOOT(false);
 else {
      BytecodeViewer.BOOT(true);
      CommandLineInput.executeCommandLine(args);
    }
  }
 catch (  Exception e) {
    new the.bytecode.club.bytecodeviewer.api.ExceptionUI(e);
  }
}
