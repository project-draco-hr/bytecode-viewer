{
  iconList=new ArrayList<BufferedImage>();
  int size=16;
  for (int i=0; i < 24; i++) {
    iconList.add(resize(icon,size,size));
    size+=2;
  }
  cleanup();
  Runtime.getRuntime().addShutdownHook(new Thread(){
    @Override public void run(){
      saveGUISettings();
      cleanup();
    }
  }
);
  try {
    UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
  }
 catch (  Exception e) {
    new the.bytecode.club.bytecodeviewer.api.ExceptionUI(e);
  }
  viewer=new MainViewerGUI();
  loadGUISettings();
  resetRecentFilesMenu();
  Thread versionChecker=new Thread(){
    @Override public void run(){
      try {
        HttpURLConnection connection=(HttpURLConnection)new URL("https://raw.githubusercontent.com/Konloch/bytecode-viewer/master/VERSION").openConnection();
        connection.setUseCaches(false);
        connection.setRequestProperty("User-Agent","Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:25.0) Gecko/20100101 Firefox/25.0");
        BufferedReader reader=new BufferedReader(new InputStreamReader(connection.getInputStream()));
        String version=reader.readLine();
        reader.close();
        if (!BytecodeViewer.version.equals(version))         showMessage("You're running an outdated version of Bytecode Viewer, current version: " + BytecodeViewer.version + ", latest version: "+ version+ nl+ nl+ "https://github.com/Konloch/bytecode-viewer");
      }
 catch (      Exception e) {
        new the.bytecode.club.bytecodeviewer.api.ExceptionUI(e);
      }
    }
  }
;
  if (viewer.chckbxmntmNewCheckItem_12.isSelected())   versionChecker.start();
  if (args.length >= 1)   for (  String s : args) {
    openFiles(new File[]{new File(s)});
  }
  viewer.setVisible(true);
}
