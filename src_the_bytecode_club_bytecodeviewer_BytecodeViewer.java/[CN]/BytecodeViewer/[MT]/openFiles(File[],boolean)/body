{
  if (recentFiles)   for (  File f : files)   BytecodeViewer.addRecentFile(f);
  BytecodeViewer.viewer.setIcon(true);
  boolean update=true;
  for (  final File f : files) {
    final String fn=f.getName();
    if (!f.exists()) {
      update=false;
      showMessage("The file " + f.getAbsolutePath() + " could not be found.");
    }
 else {
      if (fn.endsWith(".jar") || fn.endsWith(".zip")) {
        try {
          JarUtils.put(f,BytecodeViewer.loadedClasses);
        }
 catch (        final Exception e) {
          new the.bytecode.club.bytecodeviewer.api.ExceptionUI(e);
          update=false;
        }
      }
 else       if (fn.endsWith(".class")) {
        try {
          byte[] bytes=JarUtils.getBytes(new FileInputStream(f));
          String cafebabe=String.format("%02X",bytes[0]) + String.format("%02X",bytes[1]) + String.format("%02X",bytes[2])+ String.format("%02X",bytes[3]);
          if (cafebabe.toLowerCase().equals("cafebabe")) {
            final ClassNode cn=JarUtils.getNode(bytes);
            BytecodeViewer.loadedClasses.put(cn.name,cn);
          }
 else {
            showMessage(fn + ": Header does not start with CAFEBABE, ignoring.");
            update=false;
          }
        }
 catch (        final Exception e) {
          new the.bytecode.club.bytecodeviewer.api.ExceptionUI(e);
          update=false;
        }
      }
 else       if (fn.endsWith(".apk")) {
        Thread t=new Thread(){
          @Override public void run(){
            try {
              String name=getRandomizedName() + ".jar";
              File output=new File(tempDirectory + fs + name);
              Dex2Jar.dex2Jar(f,output);
              BytecodeViewer.viewer.setIcon(false);
              openFiles(new File[]{output},false);
            }
 catch (            final Exception e) {
              new the.bytecode.club.bytecodeviewer.api.ExceptionUI(e);
            }
          }
        }
;
        t.start();
        return;
      }
    }
  }
  BytecodeViewer.viewer.setIcon(false);
  if (update)   try {
    MainViewerGUI.getComponent(FileNavigationPane.class).updateTree();
  }
 catch (  java.lang.NullPointerException e) {
  }
}
