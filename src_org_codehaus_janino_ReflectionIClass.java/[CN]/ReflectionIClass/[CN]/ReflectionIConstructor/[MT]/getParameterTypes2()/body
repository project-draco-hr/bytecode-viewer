{
  IClass[] parameterTypes=ReflectionIClass.this.classesToIClasses(this.constructor.getParameterTypes());
  IClass outerClass=ReflectionIClass.this.getOuterIClass();
  if (outerClass != null) {
    if (parameterTypes.length < 1) {
      throw new CompileException("Constructor \"" + this.constructor + "\" lacks synthetic enclosing instance parameter",null);
    }
    if (parameterTypes[0] != outerClass) {
      throw new CompileException(("Enclosing instance parameter of constructor \"" + this.constructor + "\" has wrong type -- \""+ parameterTypes[0]+ "\" vs. \""+ outerClass+ "\""),null);
    }
    IClass[] tmp=new IClass[parameterTypes.length - 1];
    System.arraycopy(parameterTypes,1,tmp,0,tmp.length);
    parameterTypes=tmp;
  }
  return parameterTypes;
}
